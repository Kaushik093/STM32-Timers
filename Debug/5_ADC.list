
5_ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011d0  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000048  08001370  08001370  00002370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080013b8  080013b8  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  080013b8  080013b8  000023b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080013c0  080013c0  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080013c0  080013c0  000023c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080013c4  080013c4  000023c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  080013c8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  2000005c  08001424  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001424  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d30  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000463  00000000  00000000  00003dbc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00004220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d7  00000000  00000000  00004360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f96c  00000000  00000000  00004437  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001b04  00000000  00000000  00013da3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005538d  00000000  00000000  000158a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006ac34  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b50  00000000  00000000  0006ac78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0006b7c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001358 	.word	0x08001358

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001358 	.word	0x08001358

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <adc_init>:

#define CONV_START  (1U<<30)
#define CONV_COMPLETE  (1U<<1)
#define CONV_CONT	(1U<<1)

void adc_init(void){
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0

	/**Configure ADC GPIO pin**/

	//Enable clock for GPIO A
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b12      	ldr	r3, [pc, #72]	@ (80002d0 <adc_init+0x50>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000288:	4a11      	ldr	r2, [pc, #68]	@ (80002d0 <adc_init+0x50>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	@ 0x30

	//Set GPIOA (PA1) to analog mode
	GPIOA->MODER |= (1U<<2);
 8000290:	4b10      	ldr	r3, [pc, #64]	@ (80002d4 <adc_init+0x54>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a0f      	ldr	r2, [pc, #60]	@ (80002d4 <adc_init+0x54>)
 8000296:	f043 0304 	orr.w	r3, r3, #4
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<3);
 800029c:	4b0d      	ldr	r3, [pc, #52]	@ (80002d4 <adc_init+0x54>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a0c      	ldr	r2, [pc, #48]	@ (80002d4 <adc_init+0x54>)
 80002a2:	f043 0308 	orr.w	r3, r3, #8
 80002a6:	6013      	str	r3, [r2, #0]

	/**Configure ADC module**/

	//Enable clock access to ADC (APB2 bus)
	RCC->APB2ENR |= ADC1EN;
 80002a8:	4b09      	ldr	r3, [pc, #36]	@ (80002d0 <adc_init+0x50>)
 80002aa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80002ac:	4a08      	ldr	r2, [pc, #32]	@ (80002d0 <adc_init+0x50>)
 80002ae:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002b2:	6453      	str	r3, [r2, #68]	@ 0x44

	//Conversion sequence start
	ADC1->SQR3 = ADC_CH1;
 80002b4:	4b08      	ldr	r3, [pc, #32]	@ (80002d8 <adc_init+0x58>)
 80002b6:	2201      	movs	r2, #1
 80002b8:	635a      	str	r2, [r3, #52]	@ 0x34

	//Conversion sequence length
	ADC1->SQR1 = ADC_SEQ_LEN;
 80002ba:	4b07      	ldr	r3, [pc, #28]	@ (80002d8 <adc_init+0x58>)
 80002bc:	2200      	movs	r2, #0
 80002be:	62da      	str	r2, [r3, #44]	@ 0x2c

	//Enable ADC
	ADC1->CR2 = ADC_ON;
 80002c0:	4b05      	ldr	r3, [pc, #20]	@ (80002d8 <adc_init+0x58>)
 80002c2:	2201      	movs	r2, #1
 80002c4:	609a      	str	r2, [r3, #8]
}
 80002c6:	bf00      	nop
 80002c8:	46bd      	mov	sp, r7
 80002ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ce:	4770      	bx	lr
 80002d0:	40023800 	.word	0x40023800
 80002d4:	40020000 	.word	0x40020000
 80002d8:	40012000 	.word	0x40012000

080002dc <start_conversion>:

void start_conversion(void){
 80002dc:	b480      	push	{r7}
 80002de:	af00      	add	r7, sp, #0

	//Enable continuous conversion
	ADC1->CR2 |= CONV_CONT;
 80002e0:	4b08      	ldr	r3, [pc, #32]	@ (8000304 <start_conversion+0x28>)
 80002e2:	689b      	ldr	r3, [r3, #8]
 80002e4:	4a07      	ldr	r2, [pc, #28]	@ (8000304 <start_conversion+0x28>)
 80002e6:	f043 0302 	orr.w	r3, r3, #2
 80002ea:	6093      	str	r3, [r2, #8]

	//Start adc conversion
	ADC1->CR2 |= CONV_START;
 80002ec:	4b05      	ldr	r3, [pc, #20]	@ (8000304 <start_conversion+0x28>)
 80002ee:	689b      	ldr	r3, [r3, #8]
 80002f0:	4a04      	ldr	r2, [pc, #16]	@ (8000304 <start_conversion+0x28>)
 80002f2:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 80002f6:	6093      	str	r3, [r2, #8]
}
 80002f8:	bf00      	nop
 80002fa:	46bd      	mov	sp, r7
 80002fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000300:	4770      	bx	lr
 8000302:	bf00      	nop
 8000304:	40012000 	.word	0x40012000

08000308 <adc_read>:

uint32_t adc_read(void){
 8000308:	b480      	push	{r7}
 800030a:	af00      	add	r7, sp, #0

	//Wait for conversion to complete
	while(!(ADC1->SR & CONV_COMPLETE));
 800030c:	bf00      	nop
 800030e:	4b06      	ldr	r3, [pc, #24]	@ (8000328 <adc_read+0x20>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	f003 0302 	and.w	r3, r3, #2
 8000316:	2b00      	cmp	r3, #0
 8000318:	d0f9      	beq.n	800030e <adc_read+0x6>

	//Read from data register
	return (ADC1->DR);
 800031a:	4b03      	ldr	r3, [pc, #12]	@ (8000328 <adc_read+0x20>)
 800031c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
}
 800031e:	4618      	mov	r0, r3
 8000320:	46bd      	mov	sp, r7
 8000322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000326:	4770      	bx	lr
 8000328:	40012000 	.word	0x40012000

0800032c <main>:
#include <stdio.h>
#include "adc.h"

uint32_t sensor_value;

int main(void){
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0

	adc_init();
 8000330:	f7ff ffa6 	bl	8000280 <adc_init>
	start_conversion();
 8000334:	f7ff ffd2 	bl	80002dc <start_conversion>

	while(1){

		sensor_value = adc_read();
 8000338:	f7ff ffe6 	bl	8000308 <adc_read>
 800033c:	4603      	mov	r3, r0
 800033e:	4a05      	ldr	r2, [pc, #20]	@ (8000354 <main+0x28>)
 8000340:	6013      	str	r3, [r2, #0]
		printf("Sensor value : %d\n\r",(int)sensor_value);
 8000342:	4b04      	ldr	r3, [pc, #16]	@ (8000354 <main+0x28>)
 8000344:	681b      	ldr	r3, [r3, #0]
 8000346:	4619      	mov	r1, r3
 8000348:	4803      	ldr	r0, [pc, #12]	@ (8000358 <main+0x2c>)
 800034a:	f000 f997 	bl	800067c <iprintf>
		sensor_value = adc_read();
 800034e:	bf00      	nop
 8000350:	e7f2      	b.n	8000338 <main+0xc>
 8000352:	bf00      	nop
 8000354:	20000078 	.word	0x20000078
 8000358:	08001370 	.word	0x08001370

0800035c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800035c:	b580      	push	{r7, lr}
 800035e:	b086      	sub	sp, #24
 8000360:	af00      	add	r7, sp, #0
 8000362:	60f8      	str	r0, [r7, #12]
 8000364:	60b9      	str	r1, [r7, #8]
 8000366:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000368:	2300      	movs	r3, #0
 800036a:	617b      	str	r3, [r7, #20]
 800036c:	e00a      	b.n	8000384 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800036e:	f3af 8000 	nop.w
 8000372:	4601      	mov	r1, r0
 8000374:	68bb      	ldr	r3, [r7, #8]
 8000376:	1c5a      	adds	r2, r3, #1
 8000378:	60ba      	str	r2, [r7, #8]
 800037a:	b2ca      	uxtb	r2, r1
 800037c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037e:	697b      	ldr	r3, [r7, #20]
 8000380:	3301      	adds	r3, #1
 8000382:	617b      	str	r3, [r7, #20]
 8000384:	697a      	ldr	r2, [r7, #20]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	429a      	cmp	r2, r3
 800038a:	dbf0      	blt.n	800036e <_read+0x12>
  }

  return len;
 800038c:	687b      	ldr	r3, [r7, #4]
}
 800038e:	4618      	mov	r0, r3
 8000390:	3718      	adds	r7, #24
 8000392:	46bd      	mov	sp, r7
 8000394:	bd80      	pop	{r7, pc}

08000396 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000396:	b580      	push	{r7, lr}
 8000398:	b086      	sub	sp, #24
 800039a:	af00      	add	r7, sp, #0
 800039c:	60f8      	str	r0, [r7, #12]
 800039e:	60b9      	str	r1, [r7, #8]
 80003a0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a2:	2300      	movs	r3, #0
 80003a4:	617b      	str	r3, [r7, #20]
 80003a6:	e009      	b.n	80003bc <_write+0x26>
  {
    __io_putchar(*ptr++);
 80003a8:	68bb      	ldr	r3, [r7, #8]
 80003aa:	1c5a      	adds	r2, r3, #1
 80003ac:	60ba      	str	r2, [r7, #8]
 80003ae:	781b      	ldrb	r3, [r3, #0]
 80003b0:	4618      	mov	r0, r3
 80003b2:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	697a      	ldr	r2, [r7, #20]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	dbf1      	blt.n	80003a8 <_write+0x12>
  }
  return len;
 80003c4:	687b      	ldr	r3, [r7, #4]
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	3718      	adds	r7, #24
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bd80      	pop	{r7, pc}

080003ce <_close>:

int _close(int file)
{
 80003ce:	b480      	push	{r7}
 80003d0:	b083      	sub	sp, #12
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003d6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003da:	4618      	mov	r0, r3
 80003dc:	370c      	adds	r7, #12
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr

080003e6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b083      	sub	sp, #12
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	6078      	str	r0, [r7, #4]
 80003ee:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003f0:	683b      	ldr	r3, [r7, #0]
 80003f2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80003f6:	605a      	str	r2, [r3, #4]
  return 0;
 80003f8:	2300      	movs	r3, #0
}
 80003fa:	4618      	mov	r0, r3
 80003fc:	370c      	adds	r7, #12
 80003fe:	46bd      	mov	sp, r7
 8000400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000404:	4770      	bx	lr

08000406 <_isatty>:

int _isatty(int file)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800040e:	2301      	movs	r3, #1
}
 8000410:	4618      	mov	r0, r3
 8000412:	370c      	adds	r7, #12
 8000414:	46bd      	mov	sp, r7
 8000416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041a:	4770      	bx	lr

0800041c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800041c:	b480      	push	{r7}
 800041e:	b085      	sub	sp, #20
 8000420:	af00      	add	r7, sp, #0
 8000422:	60f8      	str	r0, [r7, #12]
 8000424:	60b9      	str	r1, [r7, #8]
 8000426:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000428:	2300      	movs	r3, #0
}
 800042a:	4618      	mov	r0, r3
 800042c:	3714      	adds	r7, #20
 800042e:	46bd      	mov	sp, r7
 8000430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000434:	4770      	bx	lr
	...

08000438 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000438:	b580      	push	{r7, lr}
 800043a:	b086      	sub	sp, #24
 800043c:	af00      	add	r7, sp, #0
 800043e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000440:	4a14      	ldr	r2, [pc, #80]	@ (8000494 <_sbrk+0x5c>)
 8000442:	4b15      	ldr	r3, [pc, #84]	@ (8000498 <_sbrk+0x60>)
 8000444:	1ad3      	subs	r3, r2, r3
 8000446:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000448:	697b      	ldr	r3, [r7, #20]
 800044a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800044c:	4b13      	ldr	r3, [pc, #76]	@ (800049c <_sbrk+0x64>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	2b00      	cmp	r3, #0
 8000452:	d102      	bne.n	800045a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000454:	4b11      	ldr	r3, [pc, #68]	@ (800049c <_sbrk+0x64>)
 8000456:	4a12      	ldr	r2, [pc, #72]	@ (80004a0 <_sbrk+0x68>)
 8000458:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800045a:	4b10      	ldr	r3, [pc, #64]	@ (800049c <_sbrk+0x64>)
 800045c:	681a      	ldr	r2, [r3, #0]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4413      	add	r3, r2
 8000462:	693a      	ldr	r2, [r7, #16]
 8000464:	429a      	cmp	r2, r3
 8000466:	d207      	bcs.n	8000478 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000468:	f000 f9ac 	bl	80007c4 <__errno>
 800046c:	4603      	mov	r3, r0
 800046e:	220c      	movs	r2, #12
 8000470:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000472:	f04f 33ff 	mov.w	r3, #4294967295
 8000476:	e009      	b.n	800048c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000478:	4b08      	ldr	r3, [pc, #32]	@ (800049c <_sbrk+0x64>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800047e:	4b07      	ldr	r3, [pc, #28]	@ (800049c <_sbrk+0x64>)
 8000480:	681a      	ldr	r2, [r3, #0]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	4413      	add	r3, r2
 8000486:	4a05      	ldr	r2, [pc, #20]	@ (800049c <_sbrk+0x64>)
 8000488:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800048a:	68fb      	ldr	r3, [r7, #12]
}
 800048c:	4618      	mov	r0, r3
 800048e:	3718      	adds	r7, #24
 8000490:	46bd      	mov	sp, r7
 8000492:	bd80      	pop	{r7, pc}
 8000494:	20018000 	.word	0x20018000
 8000498:	00000400 	.word	0x00000400
 800049c:	2000007c 	.word	0x2000007c
 80004a0:	200001d0 	.word	0x200001d0

080004a4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004a4:	480d      	ldr	r0, [pc, #52]	@ (80004dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004a6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004a8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004ac:	480c      	ldr	r0, [pc, #48]	@ (80004e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80004ae:	490d      	ldr	r1, [pc, #52]	@ (80004e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004b0:	4a0d      	ldr	r2, [pc, #52]	@ (80004e8 <LoopForever+0xe>)
  movs r3, #0
 80004b2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004b4:	e002      	b.n	80004bc <LoopCopyDataInit>

080004b6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004b6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004b8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004ba:	3304      	adds	r3, #4

080004bc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004bc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004be:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004c0:	d3f9      	bcc.n	80004b6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004c2:	4a0a      	ldr	r2, [pc, #40]	@ (80004ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80004c4:	4c0a      	ldr	r4, [pc, #40]	@ (80004f0 <LoopForever+0x16>)
  movs r3, #0
 80004c6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004c8:	e001      	b.n	80004ce <LoopFillZerobss>

080004ca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004ca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004cc:	3204      	adds	r2, #4

080004ce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004d0:	d3fb      	bcc.n	80004ca <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004d2:	f000 f97d 	bl	80007d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004d6:	f7ff ff29 	bl	800032c <main>

080004da <LoopForever>:

LoopForever:
  b LoopForever
 80004da:	e7fe      	b.n	80004da <LoopForever>
  ldr   r0, =_estack
 80004dc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004e4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004e8:	080013c8 	.word	0x080013c8
  ldr r2, =_sbss
 80004ec:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004f0:	200001cc 	.word	0x200001cc

080004f4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004f4:	e7fe      	b.n	80004f4 <ADC_IRQHandler>
	...

080004f8 <std>:
 80004f8:	2300      	movs	r3, #0
 80004fa:	b510      	push	{r4, lr}
 80004fc:	4604      	mov	r4, r0
 80004fe:	e9c0 3300 	strd	r3, r3, [r0]
 8000502:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000506:	6083      	str	r3, [r0, #8]
 8000508:	8181      	strh	r1, [r0, #12]
 800050a:	6643      	str	r3, [r0, #100]	@ 0x64
 800050c:	81c2      	strh	r2, [r0, #14]
 800050e:	6183      	str	r3, [r0, #24]
 8000510:	4619      	mov	r1, r3
 8000512:	2208      	movs	r2, #8
 8000514:	305c      	adds	r0, #92	@ 0x5c
 8000516:	f000 f906 	bl	8000726 <memset>
 800051a:	4b0d      	ldr	r3, [pc, #52]	@ (8000550 <std+0x58>)
 800051c:	6263      	str	r3, [r4, #36]	@ 0x24
 800051e:	4b0d      	ldr	r3, [pc, #52]	@ (8000554 <std+0x5c>)
 8000520:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000522:	4b0d      	ldr	r3, [pc, #52]	@ (8000558 <std+0x60>)
 8000524:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000526:	4b0d      	ldr	r3, [pc, #52]	@ (800055c <std+0x64>)
 8000528:	6323      	str	r3, [r4, #48]	@ 0x30
 800052a:	4b0d      	ldr	r3, [pc, #52]	@ (8000560 <std+0x68>)
 800052c:	6224      	str	r4, [r4, #32]
 800052e:	429c      	cmp	r4, r3
 8000530:	d006      	beq.n	8000540 <std+0x48>
 8000532:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000536:	4294      	cmp	r4, r2
 8000538:	d002      	beq.n	8000540 <std+0x48>
 800053a:	33d0      	adds	r3, #208	@ 0xd0
 800053c:	429c      	cmp	r4, r3
 800053e:	d105      	bne.n	800054c <std+0x54>
 8000540:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000548:	f000 b966 	b.w	8000818 <__retarget_lock_init_recursive>
 800054c:	bd10      	pop	{r4, pc}
 800054e:	bf00      	nop
 8000550:	080006a1 	.word	0x080006a1
 8000554:	080006c3 	.word	0x080006c3
 8000558:	080006fb 	.word	0x080006fb
 800055c:	0800071f 	.word	0x0800071f
 8000560:	20000080 	.word	0x20000080

08000564 <stdio_exit_handler>:
 8000564:	4a02      	ldr	r2, [pc, #8]	@ (8000570 <stdio_exit_handler+0xc>)
 8000566:	4903      	ldr	r1, [pc, #12]	@ (8000574 <stdio_exit_handler+0x10>)
 8000568:	4803      	ldr	r0, [pc, #12]	@ (8000578 <stdio_exit_handler+0x14>)
 800056a:	f000 b869 	b.w	8000640 <_fwalk_sglue>
 800056e:	bf00      	nop
 8000570:	20000000 	.word	0x20000000
 8000574:	080010b9 	.word	0x080010b9
 8000578:	20000010 	.word	0x20000010

0800057c <cleanup_stdio>:
 800057c:	6841      	ldr	r1, [r0, #4]
 800057e:	4b0c      	ldr	r3, [pc, #48]	@ (80005b0 <cleanup_stdio+0x34>)
 8000580:	4299      	cmp	r1, r3
 8000582:	b510      	push	{r4, lr}
 8000584:	4604      	mov	r4, r0
 8000586:	d001      	beq.n	800058c <cleanup_stdio+0x10>
 8000588:	f000 fd96 	bl	80010b8 <_fflush_r>
 800058c:	68a1      	ldr	r1, [r4, #8]
 800058e:	4b09      	ldr	r3, [pc, #36]	@ (80005b4 <cleanup_stdio+0x38>)
 8000590:	4299      	cmp	r1, r3
 8000592:	d002      	beq.n	800059a <cleanup_stdio+0x1e>
 8000594:	4620      	mov	r0, r4
 8000596:	f000 fd8f 	bl	80010b8 <_fflush_r>
 800059a:	68e1      	ldr	r1, [r4, #12]
 800059c:	4b06      	ldr	r3, [pc, #24]	@ (80005b8 <cleanup_stdio+0x3c>)
 800059e:	4299      	cmp	r1, r3
 80005a0:	d004      	beq.n	80005ac <cleanup_stdio+0x30>
 80005a2:	4620      	mov	r0, r4
 80005a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005a8:	f000 bd86 	b.w	80010b8 <_fflush_r>
 80005ac:	bd10      	pop	{r4, pc}
 80005ae:	bf00      	nop
 80005b0:	20000080 	.word	0x20000080
 80005b4:	200000e8 	.word	0x200000e8
 80005b8:	20000150 	.word	0x20000150

080005bc <global_stdio_init.part.0>:
 80005bc:	b510      	push	{r4, lr}
 80005be:	4b0b      	ldr	r3, [pc, #44]	@ (80005ec <global_stdio_init.part.0+0x30>)
 80005c0:	4c0b      	ldr	r4, [pc, #44]	@ (80005f0 <global_stdio_init.part.0+0x34>)
 80005c2:	4a0c      	ldr	r2, [pc, #48]	@ (80005f4 <global_stdio_init.part.0+0x38>)
 80005c4:	601a      	str	r2, [r3, #0]
 80005c6:	4620      	mov	r0, r4
 80005c8:	2200      	movs	r2, #0
 80005ca:	2104      	movs	r1, #4
 80005cc:	f7ff ff94 	bl	80004f8 <std>
 80005d0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80005d4:	2201      	movs	r2, #1
 80005d6:	2109      	movs	r1, #9
 80005d8:	f7ff ff8e 	bl	80004f8 <std>
 80005dc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80005e0:	2202      	movs	r2, #2
 80005e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005e6:	2112      	movs	r1, #18
 80005e8:	f7ff bf86 	b.w	80004f8 <std>
 80005ec:	200001b8 	.word	0x200001b8
 80005f0:	20000080 	.word	0x20000080
 80005f4:	08000565 	.word	0x08000565

080005f8 <__sfp_lock_acquire>:
 80005f8:	4801      	ldr	r0, [pc, #4]	@ (8000600 <__sfp_lock_acquire+0x8>)
 80005fa:	f000 b90e 	b.w	800081a <__retarget_lock_acquire_recursive>
 80005fe:	bf00      	nop
 8000600:	200001c1 	.word	0x200001c1

08000604 <__sfp_lock_release>:
 8000604:	4801      	ldr	r0, [pc, #4]	@ (800060c <__sfp_lock_release+0x8>)
 8000606:	f000 b909 	b.w	800081c <__retarget_lock_release_recursive>
 800060a:	bf00      	nop
 800060c:	200001c1 	.word	0x200001c1

08000610 <__sinit>:
 8000610:	b510      	push	{r4, lr}
 8000612:	4604      	mov	r4, r0
 8000614:	f7ff fff0 	bl	80005f8 <__sfp_lock_acquire>
 8000618:	6a23      	ldr	r3, [r4, #32]
 800061a:	b11b      	cbz	r3, 8000624 <__sinit+0x14>
 800061c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000620:	f7ff bff0 	b.w	8000604 <__sfp_lock_release>
 8000624:	4b04      	ldr	r3, [pc, #16]	@ (8000638 <__sinit+0x28>)
 8000626:	6223      	str	r3, [r4, #32]
 8000628:	4b04      	ldr	r3, [pc, #16]	@ (800063c <__sinit+0x2c>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	2b00      	cmp	r3, #0
 800062e:	d1f5      	bne.n	800061c <__sinit+0xc>
 8000630:	f7ff ffc4 	bl	80005bc <global_stdio_init.part.0>
 8000634:	e7f2      	b.n	800061c <__sinit+0xc>
 8000636:	bf00      	nop
 8000638:	0800057d 	.word	0x0800057d
 800063c:	200001b8 	.word	0x200001b8

08000640 <_fwalk_sglue>:
 8000640:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000644:	4607      	mov	r7, r0
 8000646:	4688      	mov	r8, r1
 8000648:	4614      	mov	r4, r2
 800064a:	2600      	movs	r6, #0
 800064c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000650:	f1b9 0901 	subs.w	r9, r9, #1
 8000654:	d505      	bpl.n	8000662 <_fwalk_sglue+0x22>
 8000656:	6824      	ldr	r4, [r4, #0]
 8000658:	2c00      	cmp	r4, #0
 800065a:	d1f7      	bne.n	800064c <_fwalk_sglue+0xc>
 800065c:	4630      	mov	r0, r6
 800065e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000662:	89ab      	ldrh	r3, [r5, #12]
 8000664:	2b01      	cmp	r3, #1
 8000666:	d907      	bls.n	8000678 <_fwalk_sglue+0x38>
 8000668:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800066c:	3301      	adds	r3, #1
 800066e:	d003      	beq.n	8000678 <_fwalk_sglue+0x38>
 8000670:	4629      	mov	r1, r5
 8000672:	4638      	mov	r0, r7
 8000674:	47c0      	blx	r8
 8000676:	4306      	orrs	r6, r0
 8000678:	3568      	adds	r5, #104	@ 0x68
 800067a:	e7e9      	b.n	8000650 <_fwalk_sglue+0x10>

0800067c <iprintf>:
 800067c:	b40f      	push	{r0, r1, r2, r3}
 800067e:	b507      	push	{r0, r1, r2, lr}
 8000680:	4906      	ldr	r1, [pc, #24]	@ (800069c <iprintf+0x20>)
 8000682:	ab04      	add	r3, sp, #16
 8000684:	6808      	ldr	r0, [r1, #0]
 8000686:	f853 2b04 	ldr.w	r2, [r3], #4
 800068a:	6881      	ldr	r1, [r0, #8]
 800068c:	9301      	str	r3, [sp, #4]
 800068e:	f000 f9e9 	bl	8000a64 <_vfiprintf_r>
 8000692:	b003      	add	sp, #12
 8000694:	f85d eb04 	ldr.w	lr, [sp], #4
 8000698:	b004      	add	sp, #16
 800069a:	4770      	bx	lr
 800069c:	2000000c 	.word	0x2000000c

080006a0 <__sread>:
 80006a0:	b510      	push	{r4, lr}
 80006a2:	460c      	mov	r4, r1
 80006a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006a8:	f000 f868 	bl	800077c <_read_r>
 80006ac:	2800      	cmp	r0, #0
 80006ae:	bfab      	itete	ge
 80006b0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006b2:	89a3      	ldrhlt	r3, [r4, #12]
 80006b4:	181b      	addge	r3, r3, r0
 80006b6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006ba:	bfac      	ite	ge
 80006bc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80006be:	81a3      	strhlt	r3, [r4, #12]
 80006c0:	bd10      	pop	{r4, pc}

080006c2 <__swrite>:
 80006c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80006c6:	461f      	mov	r7, r3
 80006c8:	898b      	ldrh	r3, [r1, #12]
 80006ca:	05db      	lsls	r3, r3, #23
 80006cc:	4605      	mov	r5, r0
 80006ce:	460c      	mov	r4, r1
 80006d0:	4616      	mov	r6, r2
 80006d2:	d505      	bpl.n	80006e0 <__swrite+0x1e>
 80006d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006d8:	2302      	movs	r3, #2
 80006da:	2200      	movs	r2, #0
 80006dc:	f000 f83c 	bl	8000758 <_lseek_r>
 80006e0:	89a3      	ldrh	r3, [r4, #12]
 80006e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80006ea:	81a3      	strh	r3, [r4, #12]
 80006ec:	4632      	mov	r2, r6
 80006ee:	463b      	mov	r3, r7
 80006f0:	4628      	mov	r0, r5
 80006f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006f6:	f000 b853 	b.w	80007a0 <_write_r>

080006fa <__sseek>:
 80006fa:	b510      	push	{r4, lr}
 80006fc:	460c      	mov	r4, r1
 80006fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000702:	f000 f829 	bl	8000758 <_lseek_r>
 8000706:	1c43      	adds	r3, r0, #1
 8000708:	89a3      	ldrh	r3, [r4, #12]
 800070a:	bf15      	itete	ne
 800070c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800070e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000712:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000716:	81a3      	strheq	r3, [r4, #12]
 8000718:	bf18      	it	ne
 800071a:	81a3      	strhne	r3, [r4, #12]
 800071c:	bd10      	pop	{r4, pc}

0800071e <__sclose>:
 800071e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000722:	f000 b809 	b.w	8000738 <_close_r>

08000726 <memset>:
 8000726:	4402      	add	r2, r0
 8000728:	4603      	mov	r3, r0
 800072a:	4293      	cmp	r3, r2
 800072c:	d100      	bne.n	8000730 <memset+0xa>
 800072e:	4770      	bx	lr
 8000730:	f803 1b01 	strb.w	r1, [r3], #1
 8000734:	e7f9      	b.n	800072a <memset+0x4>
	...

08000738 <_close_r>:
 8000738:	b538      	push	{r3, r4, r5, lr}
 800073a:	4d06      	ldr	r5, [pc, #24]	@ (8000754 <_close_r+0x1c>)
 800073c:	2300      	movs	r3, #0
 800073e:	4604      	mov	r4, r0
 8000740:	4608      	mov	r0, r1
 8000742:	602b      	str	r3, [r5, #0]
 8000744:	f7ff fe43 	bl	80003ce <_close>
 8000748:	1c43      	adds	r3, r0, #1
 800074a:	d102      	bne.n	8000752 <_close_r+0x1a>
 800074c:	682b      	ldr	r3, [r5, #0]
 800074e:	b103      	cbz	r3, 8000752 <_close_r+0x1a>
 8000750:	6023      	str	r3, [r4, #0]
 8000752:	bd38      	pop	{r3, r4, r5, pc}
 8000754:	200001bc 	.word	0x200001bc

08000758 <_lseek_r>:
 8000758:	b538      	push	{r3, r4, r5, lr}
 800075a:	4d07      	ldr	r5, [pc, #28]	@ (8000778 <_lseek_r+0x20>)
 800075c:	4604      	mov	r4, r0
 800075e:	4608      	mov	r0, r1
 8000760:	4611      	mov	r1, r2
 8000762:	2200      	movs	r2, #0
 8000764:	602a      	str	r2, [r5, #0]
 8000766:	461a      	mov	r2, r3
 8000768:	f7ff fe58 	bl	800041c <_lseek>
 800076c:	1c43      	adds	r3, r0, #1
 800076e:	d102      	bne.n	8000776 <_lseek_r+0x1e>
 8000770:	682b      	ldr	r3, [r5, #0]
 8000772:	b103      	cbz	r3, 8000776 <_lseek_r+0x1e>
 8000774:	6023      	str	r3, [r4, #0]
 8000776:	bd38      	pop	{r3, r4, r5, pc}
 8000778:	200001bc 	.word	0x200001bc

0800077c <_read_r>:
 800077c:	b538      	push	{r3, r4, r5, lr}
 800077e:	4d07      	ldr	r5, [pc, #28]	@ (800079c <_read_r+0x20>)
 8000780:	4604      	mov	r4, r0
 8000782:	4608      	mov	r0, r1
 8000784:	4611      	mov	r1, r2
 8000786:	2200      	movs	r2, #0
 8000788:	602a      	str	r2, [r5, #0]
 800078a:	461a      	mov	r2, r3
 800078c:	f7ff fde6 	bl	800035c <_read>
 8000790:	1c43      	adds	r3, r0, #1
 8000792:	d102      	bne.n	800079a <_read_r+0x1e>
 8000794:	682b      	ldr	r3, [r5, #0]
 8000796:	b103      	cbz	r3, 800079a <_read_r+0x1e>
 8000798:	6023      	str	r3, [r4, #0]
 800079a:	bd38      	pop	{r3, r4, r5, pc}
 800079c:	200001bc 	.word	0x200001bc

080007a0 <_write_r>:
 80007a0:	b538      	push	{r3, r4, r5, lr}
 80007a2:	4d07      	ldr	r5, [pc, #28]	@ (80007c0 <_write_r+0x20>)
 80007a4:	4604      	mov	r4, r0
 80007a6:	4608      	mov	r0, r1
 80007a8:	4611      	mov	r1, r2
 80007aa:	2200      	movs	r2, #0
 80007ac:	602a      	str	r2, [r5, #0]
 80007ae:	461a      	mov	r2, r3
 80007b0:	f7ff fdf1 	bl	8000396 <_write>
 80007b4:	1c43      	adds	r3, r0, #1
 80007b6:	d102      	bne.n	80007be <_write_r+0x1e>
 80007b8:	682b      	ldr	r3, [r5, #0]
 80007ba:	b103      	cbz	r3, 80007be <_write_r+0x1e>
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	bd38      	pop	{r3, r4, r5, pc}
 80007c0:	200001bc 	.word	0x200001bc

080007c4 <__errno>:
 80007c4:	4b01      	ldr	r3, [pc, #4]	@ (80007cc <__errno+0x8>)
 80007c6:	6818      	ldr	r0, [r3, #0]
 80007c8:	4770      	bx	lr
 80007ca:	bf00      	nop
 80007cc:	2000000c 	.word	0x2000000c

080007d0 <__libc_init_array>:
 80007d0:	b570      	push	{r4, r5, r6, lr}
 80007d2:	4d0d      	ldr	r5, [pc, #52]	@ (8000808 <__libc_init_array+0x38>)
 80007d4:	4c0d      	ldr	r4, [pc, #52]	@ (800080c <__libc_init_array+0x3c>)
 80007d6:	1b64      	subs	r4, r4, r5
 80007d8:	10a4      	asrs	r4, r4, #2
 80007da:	2600      	movs	r6, #0
 80007dc:	42a6      	cmp	r6, r4
 80007de:	d109      	bne.n	80007f4 <__libc_init_array+0x24>
 80007e0:	4d0b      	ldr	r5, [pc, #44]	@ (8000810 <__libc_init_array+0x40>)
 80007e2:	4c0c      	ldr	r4, [pc, #48]	@ (8000814 <__libc_init_array+0x44>)
 80007e4:	f000 fdb8 	bl	8001358 <_init>
 80007e8:	1b64      	subs	r4, r4, r5
 80007ea:	10a4      	asrs	r4, r4, #2
 80007ec:	2600      	movs	r6, #0
 80007ee:	42a6      	cmp	r6, r4
 80007f0:	d105      	bne.n	80007fe <__libc_init_array+0x2e>
 80007f2:	bd70      	pop	{r4, r5, r6, pc}
 80007f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f8:	4798      	blx	r3
 80007fa:	3601      	adds	r6, #1
 80007fc:	e7ee      	b.n	80007dc <__libc_init_array+0xc>
 80007fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000802:	4798      	blx	r3
 8000804:	3601      	adds	r6, #1
 8000806:	e7f2      	b.n	80007ee <__libc_init_array+0x1e>
 8000808:	080013c0 	.word	0x080013c0
 800080c:	080013c0 	.word	0x080013c0
 8000810:	080013c0 	.word	0x080013c0
 8000814:	080013c4 	.word	0x080013c4

08000818 <__retarget_lock_init_recursive>:
 8000818:	4770      	bx	lr

0800081a <__retarget_lock_acquire_recursive>:
 800081a:	4770      	bx	lr

0800081c <__retarget_lock_release_recursive>:
 800081c:	4770      	bx	lr
	...

08000820 <_free_r>:
 8000820:	b538      	push	{r3, r4, r5, lr}
 8000822:	4605      	mov	r5, r0
 8000824:	2900      	cmp	r1, #0
 8000826:	d041      	beq.n	80008ac <_free_r+0x8c>
 8000828:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800082c:	1f0c      	subs	r4, r1, #4
 800082e:	2b00      	cmp	r3, #0
 8000830:	bfb8      	it	lt
 8000832:	18e4      	addlt	r4, r4, r3
 8000834:	f000 f8e0 	bl	80009f8 <__malloc_lock>
 8000838:	4a1d      	ldr	r2, [pc, #116]	@ (80008b0 <_free_r+0x90>)
 800083a:	6813      	ldr	r3, [r2, #0]
 800083c:	b933      	cbnz	r3, 800084c <_free_r+0x2c>
 800083e:	6063      	str	r3, [r4, #4]
 8000840:	6014      	str	r4, [r2, #0]
 8000842:	4628      	mov	r0, r5
 8000844:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000848:	f000 b8dc 	b.w	8000a04 <__malloc_unlock>
 800084c:	42a3      	cmp	r3, r4
 800084e:	d908      	bls.n	8000862 <_free_r+0x42>
 8000850:	6820      	ldr	r0, [r4, #0]
 8000852:	1821      	adds	r1, r4, r0
 8000854:	428b      	cmp	r3, r1
 8000856:	bf01      	itttt	eq
 8000858:	6819      	ldreq	r1, [r3, #0]
 800085a:	685b      	ldreq	r3, [r3, #4]
 800085c:	1809      	addeq	r1, r1, r0
 800085e:	6021      	streq	r1, [r4, #0]
 8000860:	e7ed      	b.n	800083e <_free_r+0x1e>
 8000862:	461a      	mov	r2, r3
 8000864:	685b      	ldr	r3, [r3, #4]
 8000866:	b10b      	cbz	r3, 800086c <_free_r+0x4c>
 8000868:	42a3      	cmp	r3, r4
 800086a:	d9fa      	bls.n	8000862 <_free_r+0x42>
 800086c:	6811      	ldr	r1, [r2, #0]
 800086e:	1850      	adds	r0, r2, r1
 8000870:	42a0      	cmp	r0, r4
 8000872:	d10b      	bne.n	800088c <_free_r+0x6c>
 8000874:	6820      	ldr	r0, [r4, #0]
 8000876:	4401      	add	r1, r0
 8000878:	1850      	adds	r0, r2, r1
 800087a:	4283      	cmp	r3, r0
 800087c:	6011      	str	r1, [r2, #0]
 800087e:	d1e0      	bne.n	8000842 <_free_r+0x22>
 8000880:	6818      	ldr	r0, [r3, #0]
 8000882:	685b      	ldr	r3, [r3, #4]
 8000884:	6053      	str	r3, [r2, #4]
 8000886:	4408      	add	r0, r1
 8000888:	6010      	str	r0, [r2, #0]
 800088a:	e7da      	b.n	8000842 <_free_r+0x22>
 800088c:	d902      	bls.n	8000894 <_free_r+0x74>
 800088e:	230c      	movs	r3, #12
 8000890:	602b      	str	r3, [r5, #0]
 8000892:	e7d6      	b.n	8000842 <_free_r+0x22>
 8000894:	6820      	ldr	r0, [r4, #0]
 8000896:	1821      	adds	r1, r4, r0
 8000898:	428b      	cmp	r3, r1
 800089a:	bf04      	itt	eq
 800089c:	6819      	ldreq	r1, [r3, #0]
 800089e:	685b      	ldreq	r3, [r3, #4]
 80008a0:	6063      	str	r3, [r4, #4]
 80008a2:	bf04      	itt	eq
 80008a4:	1809      	addeq	r1, r1, r0
 80008a6:	6021      	streq	r1, [r4, #0]
 80008a8:	6054      	str	r4, [r2, #4]
 80008aa:	e7ca      	b.n	8000842 <_free_r+0x22>
 80008ac:	bd38      	pop	{r3, r4, r5, pc}
 80008ae:	bf00      	nop
 80008b0:	200001c8 	.word	0x200001c8

080008b4 <sbrk_aligned>:
 80008b4:	b570      	push	{r4, r5, r6, lr}
 80008b6:	4e0f      	ldr	r6, [pc, #60]	@ (80008f4 <sbrk_aligned+0x40>)
 80008b8:	460c      	mov	r4, r1
 80008ba:	6831      	ldr	r1, [r6, #0]
 80008bc:	4605      	mov	r5, r0
 80008be:	b911      	cbnz	r1, 80008c6 <sbrk_aligned+0x12>
 80008c0:	f000 fcb6 	bl	8001230 <_sbrk_r>
 80008c4:	6030      	str	r0, [r6, #0]
 80008c6:	4621      	mov	r1, r4
 80008c8:	4628      	mov	r0, r5
 80008ca:	f000 fcb1 	bl	8001230 <_sbrk_r>
 80008ce:	1c43      	adds	r3, r0, #1
 80008d0:	d103      	bne.n	80008da <sbrk_aligned+0x26>
 80008d2:	f04f 34ff 	mov.w	r4, #4294967295
 80008d6:	4620      	mov	r0, r4
 80008d8:	bd70      	pop	{r4, r5, r6, pc}
 80008da:	1cc4      	adds	r4, r0, #3
 80008dc:	f024 0403 	bic.w	r4, r4, #3
 80008e0:	42a0      	cmp	r0, r4
 80008e2:	d0f8      	beq.n	80008d6 <sbrk_aligned+0x22>
 80008e4:	1a21      	subs	r1, r4, r0
 80008e6:	4628      	mov	r0, r5
 80008e8:	f000 fca2 	bl	8001230 <_sbrk_r>
 80008ec:	3001      	adds	r0, #1
 80008ee:	d1f2      	bne.n	80008d6 <sbrk_aligned+0x22>
 80008f0:	e7ef      	b.n	80008d2 <sbrk_aligned+0x1e>
 80008f2:	bf00      	nop
 80008f4:	200001c4 	.word	0x200001c4

080008f8 <_malloc_r>:
 80008f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008fc:	1ccd      	adds	r5, r1, #3
 80008fe:	f025 0503 	bic.w	r5, r5, #3
 8000902:	3508      	adds	r5, #8
 8000904:	2d0c      	cmp	r5, #12
 8000906:	bf38      	it	cc
 8000908:	250c      	movcc	r5, #12
 800090a:	2d00      	cmp	r5, #0
 800090c:	4606      	mov	r6, r0
 800090e:	db01      	blt.n	8000914 <_malloc_r+0x1c>
 8000910:	42a9      	cmp	r1, r5
 8000912:	d904      	bls.n	800091e <_malloc_r+0x26>
 8000914:	230c      	movs	r3, #12
 8000916:	6033      	str	r3, [r6, #0]
 8000918:	2000      	movs	r0, #0
 800091a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800091e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80009f4 <_malloc_r+0xfc>
 8000922:	f000 f869 	bl	80009f8 <__malloc_lock>
 8000926:	f8d8 3000 	ldr.w	r3, [r8]
 800092a:	461c      	mov	r4, r3
 800092c:	bb44      	cbnz	r4, 8000980 <_malloc_r+0x88>
 800092e:	4629      	mov	r1, r5
 8000930:	4630      	mov	r0, r6
 8000932:	f7ff ffbf 	bl	80008b4 <sbrk_aligned>
 8000936:	1c43      	adds	r3, r0, #1
 8000938:	4604      	mov	r4, r0
 800093a:	d158      	bne.n	80009ee <_malloc_r+0xf6>
 800093c:	f8d8 4000 	ldr.w	r4, [r8]
 8000940:	4627      	mov	r7, r4
 8000942:	2f00      	cmp	r7, #0
 8000944:	d143      	bne.n	80009ce <_malloc_r+0xd6>
 8000946:	2c00      	cmp	r4, #0
 8000948:	d04b      	beq.n	80009e2 <_malloc_r+0xea>
 800094a:	6823      	ldr	r3, [r4, #0]
 800094c:	4639      	mov	r1, r7
 800094e:	4630      	mov	r0, r6
 8000950:	eb04 0903 	add.w	r9, r4, r3
 8000954:	f000 fc6c 	bl	8001230 <_sbrk_r>
 8000958:	4581      	cmp	r9, r0
 800095a:	d142      	bne.n	80009e2 <_malloc_r+0xea>
 800095c:	6821      	ldr	r1, [r4, #0]
 800095e:	1a6d      	subs	r5, r5, r1
 8000960:	4629      	mov	r1, r5
 8000962:	4630      	mov	r0, r6
 8000964:	f7ff ffa6 	bl	80008b4 <sbrk_aligned>
 8000968:	3001      	adds	r0, #1
 800096a:	d03a      	beq.n	80009e2 <_malloc_r+0xea>
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	442b      	add	r3, r5
 8000970:	6023      	str	r3, [r4, #0]
 8000972:	f8d8 3000 	ldr.w	r3, [r8]
 8000976:	685a      	ldr	r2, [r3, #4]
 8000978:	bb62      	cbnz	r2, 80009d4 <_malloc_r+0xdc>
 800097a:	f8c8 7000 	str.w	r7, [r8]
 800097e:	e00f      	b.n	80009a0 <_malloc_r+0xa8>
 8000980:	6822      	ldr	r2, [r4, #0]
 8000982:	1b52      	subs	r2, r2, r5
 8000984:	d420      	bmi.n	80009c8 <_malloc_r+0xd0>
 8000986:	2a0b      	cmp	r2, #11
 8000988:	d917      	bls.n	80009ba <_malloc_r+0xc2>
 800098a:	1961      	adds	r1, r4, r5
 800098c:	42a3      	cmp	r3, r4
 800098e:	6025      	str	r5, [r4, #0]
 8000990:	bf18      	it	ne
 8000992:	6059      	strne	r1, [r3, #4]
 8000994:	6863      	ldr	r3, [r4, #4]
 8000996:	bf08      	it	eq
 8000998:	f8c8 1000 	streq.w	r1, [r8]
 800099c:	5162      	str	r2, [r4, r5]
 800099e:	604b      	str	r3, [r1, #4]
 80009a0:	4630      	mov	r0, r6
 80009a2:	f000 f82f 	bl	8000a04 <__malloc_unlock>
 80009a6:	f104 000b 	add.w	r0, r4, #11
 80009aa:	1d23      	adds	r3, r4, #4
 80009ac:	f020 0007 	bic.w	r0, r0, #7
 80009b0:	1ac2      	subs	r2, r0, r3
 80009b2:	bf1c      	itt	ne
 80009b4:	1a1b      	subne	r3, r3, r0
 80009b6:	50a3      	strne	r3, [r4, r2]
 80009b8:	e7af      	b.n	800091a <_malloc_r+0x22>
 80009ba:	6862      	ldr	r2, [r4, #4]
 80009bc:	42a3      	cmp	r3, r4
 80009be:	bf0c      	ite	eq
 80009c0:	f8c8 2000 	streq.w	r2, [r8]
 80009c4:	605a      	strne	r2, [r3, #4]
 80009c6:	e7eb      	b.n	80009a0 <_malloc_r+0xa8>
 80009c8:	4623      	mov	r3, r4
 80009ca:	6864      	ldr	r4, [r4, #4]
 80009cc:	e7ae      	b.n	800092c <_malloc_r+0x34>
 80009ce:	463c      	mov	r4, r7
 80009d0:	687f      	ldr	r7, [r7, #4]
 80009d2:	e7b6      	b.n	8000942 <_malloc_r+0x4a>
 80009d4:	461a      	mov	r2, r3
 80009d6:	685b      	ldr	r3, [r3, #4]
 80009d8:	42a3      	cmp	r3, r4
 80009da:	d1fb      	bne.n	80009d4 <_malloc_r+0xdc>
 80009dc:	2300      	movs	r3, #0
 80009de:	6053      	str	r3, [r2, #4]
 80009e0:	e7de      	b.n	80009a0 <_malloc_r+0xa8>
 80009e2:	230c      	movs	r3, #12
 80009e4:	6033      	str	r3, [r6, #0]
 80009e6:	4630      	mov	r0, r6
 80009e8:	f000 f80c 	bl	8000a04 <__malloc_unlock>
 80009ec:	e794      	b.n	8000918 <_malloc_r+0x20>
 80009ee:	6005      	str	r5, [r0, #0]
 80009f0:	e7d6      	b.n	80009a0 <_malloc_r+0xa8>
 80009f2:	bf00      	nop
 80009f4:	200001c8 	.word	0x200001c8

080009f8 <__malloc_lock>:
 80009f8:	4801      	ldr	r0, [pc, #4]	@ (8000a00 <__malloc_lock+0x8>)
 80009fa:	f7ff bf0e 	b.w	800081a <__retarget_lock_acquire_recursive>
 80009fe:	bf00      	nop
 8000a00:	200001c0 	.word	0x200001c0

08000a04 <__malloc_unlock>:
 8000a04:	4801      	ldr	r0, [pc, #4]	@ (8000a0c <__malloc_unlock+0x8>)
 8000a06:	f7ff bf09 	b.w	800081c <__retarget_lock_release_recursive>
 8000a0a:	bf00      	nop
 8000a0c:	200001c0 	.word	0x200001c0

08000a10 <__sfputc_r>:
 8000a10:	6893      	ldr	r3, [r2, #8]
 8000a12:	3b01      	subs	r3, #1
 8000a14:	2b00      	cmp	r3, #0
 8000a16:	b410      	push	{r4}
 8000a18:	6093      	str	r3, [r2, #8]
 8000a1a:	da08      	bge.n	8000a2e <__sfputc_r+0x1e>
 8000a1c:	6994      	ldr	r4, [r2, #24]
 8000a1e:	42a3      	cmp	r3, r4
 8000a20:	db01      	blt.n	8000a26 <__sfputc_r+0x16>
 8000a22:	290a      	cmp	r1, #10
 8000a24:	d103      	bne.n	8000a2e <__sfputc_r+0x1e>
 8000a26:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a2a:	f000 bb6d 	b.w	8001108 <__swbuf_r>
 8000a2e:	6813      	ldr	r3, [r2, #0]
 8000a30:	1c58      	adds	r0, r3, #1
 8000a32:	6010      	str	r0, [r2, #0]
 8000a34:	7019      	strb	r1, [r3, #0]
 8000a36:	4608      	mov	r0, r1
 8000a38:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a3c:	4770      	bx	lr

08000a3e <__sfputs_r>:
 8000a3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a40:	4606      	mov	r6, r0
 8000a42:	460f      	mov	r7, r1
 8000a44:	4614      	mov	r4, r2
 8000a46:	18d5      	adds	r5, r2, r3
 8000a48:	42ac      	cmp	r4, r5
 8000a4a:	d101      	bne.n	8000a50 <__sfputs_r+0x12>
 8000a4c:	2000      	movs	r0, #0
 8000a4e:	e007      	b.n	8000a60 <__sfputs_r+0x22>
 8000a50:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a54:	463a      	mov	r2, r7
 8000a56:	4630      	mov	r0, r6
 8000a58:	f7ff ffda 	bl	8000a10 <__sfputc_r>
 8000a5c:	1c43      	adds	r3, r0, #1
 8000a5e:	d1f3      	bne.n	8000a48 <__sfputs_r+0xa>
 8000a60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a64 <_vfiprintf_r>:
 8000a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a68:	460d      	mov	r5, r1
 8000a6a:	b09d      	sub	sp, #116	@ 0x74
 8000a6c:	4614      	mov	r4, r2
 8000a6e:	4698      	mov	r8, r3
 8000a70:	4606      	mov	r6, r0
 8000a72:	b118      	cbz	r0, 8000a7c <_vfiprintf_r+0x18>
 8000a74:	6a03      	ldr	r3, [r0, #32]
 8000a76:	b90b      	cbnz	r3, 8000a7c <_vfiprintf_r+0x18>
 8000a78:	f7ff fdca 	bl	8000610 <__sinit>
 8000a7c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000a7e:	07d9      	lsls	r1, r3, #31
 8000a80:	d405      	bmi.n	8000a8e <_vfiprintf_r+0x2a>
 8000a82:	89ab      	ldrh	r3, [r5, #12]
 8000a84:	059a      	lsls	r2, r3, #22
 8000a86:	d402      	bmi.n	8000a8e <_vfiprintf_r+0x2a>
 8000a88:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000a8a:	f7ff fec6 	bl	800081a <__retarget_lock_acquire_recursive>
 8000a8e:	89ab      	ldrh	r3, [r5, #12]
 8000a90:	071b      	lsls	r3, r3, #28
 8000a92:	d501      	bpl.n	8000a98 <_vfiprintf_r+0x34>
 8000a94:	692b      	ldr	r3, [r5, #16]
 8000a96:	b99b      	cbnz	r3, 8000ac0 <_vfiprintf_r+0x5c>
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4630      	mov	r0, r6
 8000a9c:	f000 fb72 	bl	8001184 <__swsetup_r>
 8000aa0:	b170      	cbz	r0, 8000ac0 <_vfiprintf_r+0x5c>
 8000aa2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000aa4:	07dc      	lsls	r4, r3, #31
 8000aa6:	d504      	bpl.n	8000ab2 <_vfiprintf_r+0x4e>
 8000aa8:	f04f 30ff 	mov.w	r0, #4294967295
 8000aac:	b01d      	add	sp, #116	@ 0x74
 8000aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ab2:	89ab      	ldrh	r3, [r5, #12]
 8000ab4:	0598      	lsls	r0, r3, #22
 8000ab6:	d4f7      	bmi.n	8000aa8 <_vfiprintf_r+0x44>
 8000ab8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000aba:	f7ff feaf 	bl	800081c <__retarget_lock_release_recursive>
 8000abe:	e7f3      	b.n	8000aa8 <_vfiprintf_r+0x44>
 8000ac0:	2300      	movs	r3, #0
 8000ac2:	9309      	str	r3, [sp, #36]	@ 0x24
 8000ac4:	2320      	movs	r3, #32
 8000ac6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000aca:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ace:	2330      	movs	r3, #48	@ 0x30
 8000ad0:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000c80 <_vfiprintf_r+0x21c>
 8000ad4:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000ad8:	f04f 0901 	mov.w	r9, #1
 8000adc:	4623      	mov	r3, r4
 8000ade:	469a      	mov	sl, r3
 8000ae0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ae4:	b10a      	cbz	r2, 8000aea <_vfiprintf_r+0x86>
 8000ae6:	2a25      	cmp	r2, #37	@ 0x25
 8000ae8:	d1f9      	bne.n	8000ade <_vfiprintf_r+0x7a>
 8000aea:	ebba 0b04 	subs.w	fp, sl, r4
 8000aee:	d00b      	beq.n	8000b08 <_vfiprintf_r+0xa4>
 8000af0:	465b      	mov	r3, fp
 8000af2:	4622      	mov	r2, r4
 8000af4:	4629      	mov	r1, r5
 8000af6:	4630      	mov	r0, r6
 8000af8:	f7ff ffa1 	bl	8000a3e <__sfputs_r>
 8000afc:	3001      	adds	r0, #1
 8000afe:	f000 80a7 	beq.w	8000c50 <_vfiprintf_r+0x1ec>
 8000b02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000b04:	445a      	add	r2, fp
 8000b06:	9209      	str	r2, [sp, #36]	@ 0x24
 8000b08:	f89a 3000 	ldrb.w	r3, [sl]
 8000b0c:	2b00      	cmp	r3, #0
 8000b0e:	f000 809f 	beq.w	8000c50 <_vfiprintf_r+0x1ec>
 8000b12:	2300      	movs	r3, #0
 8000b14:	f04f 32ff 	mov.w	r2, #4294967295
 8000b18:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b1c:	f10a 0a01 	add.w	sl, sl, #1
 8000b20:	9304      	str	r3, [sp, #16]
 8000b22:	9307      	str	r3, [sp, #28]
 8000b24:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b28:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b2a:	4654      	mov	r4, sl
 8000b2c:	2205      	movs	r2, #5
 8000b2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b32:	4853      	ldr	r0, [pc, #332]	@ (8000c80 <_vfiprintf_r+0x21c>)
 8000b34:	f7ff fb54 	bl	80001e0 <memchr>
 8000b38:	9a04      	ldr	r2, [sp, #16]
 8000b3a:	b9d8      	cbnz	r0, 8000b74 <_vfiprintf_r+0x110>
 8000b3c:	06d1      	lsls	r1, r2, #27
 8000b3e:	bf44      	itt	mi
 8000b40:	2320      	movmi	r3, #32
 8000b42:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b46:	0713      	lsls	r3, r2, #28
 8000b48:	bf44      	itt	mi
 8000b4a:	232b      	movmi	r3, #43	@ 0x2b
 8000b4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b50:	f89a 3000 	ldrb.w	r3, [sl]
 8000b54:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b56:	d015      	beq.n	8000b84 <_vfiprintf_r+0x120>
 8000b58:	9a07      	ldr	r2, [sp, #28]
 8000b5a:	4654      	mov	r4, sl
 8000b5c:	2000      	movs	r0, #0
 8000b5e:	f04f 0c0a 	mov.w	ip, #10
 8000b62:	4621      	mov	r1, r4
 8000b64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b68:	3b30      	subs	r3, #48	@ 0x30
 8000b6a:	2b09      	cmp	r3, #9
 8000b6c:	d94b      	bls.n	8000c06 <_vfiprintf_r+0x1a2>
 8000b6e:	b1b0      	cbz	r0, 8000b9e <_vfiprintf_r+0x13a>
 8000b70:	9207      	str	r2, [sp, #28]
 8000b72:	e014      	b.n	8000b9e <_vfiprintf_r+0x13a>
 8000b74:	eba0 0308 	sub.w	r3, r0, r8
 8000b78:	fa09 f303 	lsl.w	r3, r9, r3
 8000b7c:	4313      	orrs	r3, r2
 8000b7e:	9304      	str	r3, [sp, #16]
 8000b80:	46a2      	mov	sl, r4
 8000b82:	e7d2      	b.n	8000b2a <_vfiprintf_r+0xc6>
 8000b84:	9b03      	ldr	r3, [sp, #12]
 8000b86:	1d19      	adds	r1, r3, #4
 8000b88:	681b      	ldr	r3, [r3, #0]
 8000b8a:	9103      	str	r1, [sp, #12]
 8000b8c:	2b00      	cmp	r3, #0
 8000b8e:	bfbb      	ittet	lt
 8000b90:	425b      	neglt	r3, r3
 8000b92:	f042 0202 	orrlt.w	r2, r2, #2
 8000b96:	9307      	strge	r3, [sp, #28]
 8000b98:	9307      	strlt	r3, [sp, #28]
 8000b9a:	bfb8      	it	lt
 8000b9c:	9204      	strlt	r2, [sp, #16]
 8000b9e:	7823      	ldrb	r3, [r4, #0]
 8000ba0:	2b2e      	cmp	r3, #46	@ 0x2e
 8000ba2:	d10a      	bne.n	8000bba <_vfiprintf_r+0x156>
 8000ba4:	7863      	ldrb	r3, [r4, #1]
 8000ba6:	2b2a      	cmp	r3, #42	@ 0x2a
 8000ba8:	d132      	bne.n	8000c10 <_vfiprintf_r+0x1ac>
 8000baa:	9b03      	ldr	r3, [sp, #12]
 8000bac:	1d1a      	adds	r2, r3, #4
 8000bae:	681b      	ldr	r3, [r3, #0]
 8000bb0:	9203      	str	r2, [sp, #12]
 8000bb2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000bb6:	3402      	adds	r4, #2
 8000bb8:	9305      	str	r3, [sp, #20]
 8000bba:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000c90 <_vfiprintf_r+0x22c>
 8000bbe:	7821      	ldrb	r1, [r4, #0]
 8000bc0:	2203      	movs	r2, #3
 8000bc2:	4650      	mov	r0, sl
 8000bc4:	f7ff fb0c 	bl	80001e0 <memchr>
 8000bc8:	b138      	cbz	r0, 8000bda <_vfiprintf_r+0x176>
 8000bca:	9b04      	ldr	r3, [sp, #16]
 8000bcc:	eba0 000a 	sub.w	r0, r0, sl
 8000bd0:	2240      	movs	r2, #64	@ 0x40
 8000bd2:	4082      	lsls	r2, r0
 8000bd4:	4313      	orrs	r3, r2
 8000bd6:	3401      	adds	r4, #1
 8000bd8:	9304      	str	r3, [sp, #16]
 8000bda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bde:	4829      	ldr	r0, [pc, #164]	@ (8000c84 <_vfiprintf_r+0x220>)
 8000be0:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000be4:	2206      	movs	r2, #6
 8000be6:	f7ff fafb 	bl	80001e0 <memchr>
 8000bea:	2800      	cmp	r0, #0
 8000bec:	d03f      	beq.n	8000c6e <_vfiprintf_r+0x20a>
 8000bee:	4b26      	ldr	r3, [pc, #152]	@ (8000c88 <_vfiprintf_r+0x224>)
 8000bf0:	bb1b      	cbnz	r3, 8000c3a <_vfiprintf_r+0x1d6>
 8000bf2:	9b03      	ldr	r3, [sp, #12]
 8000bf4:	3307      	adds	r3, #7
 8000bf6:	f023 0307 	bic.w	r3, r3, #7
 8000bfa:	3308      	adds	r3, #8
 8000bfc:	9303      	str	r3, [sp, #12]
 8000bfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000c00:	443b      	add	r3, r7
 8000c02:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c04:	e76a      	b.n	8000adc <_vfiprintf_r+0x78>
 8000c06:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c0a:	460c      	mov	r4, r1
 8000c0c:	2001      	movs	r0, #1
 8000c0e:	e7a8      	b.n	8000b62 <_vfiprintf_r+0xfe>
 8000c10:	2300      	movs	r3, #0
 8000c12:	3401      	adds	r4, #1
 8000c14:	9305      	str	r3, [sp, #20]
 8000c16:	4619      	mov	r1, r3
 8000c18:	f04f 0c0a 	mov.w	ip, #10
 8000c1c:	4620      	mov	r0, r4
 8000c1e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c22:	3a30      	subs	r2, #48	@ 0x30
 8000c24:	2a09      	cmp	r2, #9
 8000c26:	d903      	bls.n	8000c30 <_vfiprintf_r+0x1cc>
 8000c28:	2b00      	cmp	r3, #0
 8000c2a:	d0c6      	beq.n	8000bba <_vfiprintf_r+0x156>
 8000c2c:	9105      	str	r1, [sp, #20]
 8000c2e:	e7c4      	b.n	8000bba <_vfiprintf_r+0x156>
 8000c30:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c34:	4604      	mov	r4, r0
 8000c36:	2301      	movs	r3, #1
 8000c38:	e7f0      	b.n	8000c1c <_vfiprintf_r+0x1b8>
 8000c3a:	ab03      	add	r3, sp, #12
 8000c3c:	9300      	str	r3, [sp, #0]
 8000c3e:	462a      	mov	r2, r5
 8000c40:	4b12      	ldr	r3, [pc, #72]	@ (8000c8c <_vfiprintf_r+0x228>)
 8000c42:	a904      	add	r1, sp, #16
 8000c44:	4630      	mov	r0, r6
 8000c46:	f3af 8000 	nop.w
 8000c4a:	4607      	mov	r7, r0
 8000c4c:	1c78      	adds	r0, r7, #1
 8000c4e:	d1d6      	bne.n	8000bfe <_vfiprintf_r+0x19a>
 8000c50:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c52:	07d9      	lsls	r1, r3, #31
 8000c54:	d405      	bmi.n	8000c62 <_vfiprintf_r+0x1fe>
 8000c56:	89ab      	ldrh	r3, [r5, #12]
 8000c58:	059a      	lsls	r2, r3, #22
 8000c5a:	d402      	bmi.n	8000c62 <_vfiprintf_r+0x1fe>
 8000c5c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000c5e:	f7ff fddd 	bl	800081c <__retarget_lock_release_recursive>
 8000c62:	89ab      	ldrh	r3, [r5, #12]
 8000c64:	065b      	lsls	r3, r3, #25
 8000c66:	f53f af1f 	bmi.w	8000aa8 <_vfiprintf_r+0x44>
 8000c6a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000c6c:	e71e      	b.n	8000aac <_vfiprintf_r+0x48>
 8000c6e:	ab03      	add	r3, sp, #12
 8000c70:	9300      	str	r3, [sp, #0]
 8000c72:	462a      	mov	r2, r5
 8000c74:	4b05      	ldr	r3, [pc, #20]	@ (8000c8c <_vfiprintf_r+0x228>)
 8000c76:	a904      	add	r1, sp, #16
 8000c78:	4630      	mov	r0, r6
 8000c7a:	f000 f879 	bl	8000d70 <_printf_i>
 8000c7e:	e7e4      	b.n	8000c4a <_vfiprintf_r+0x1e6>
 8000c80:	08001384 	.word	0x08001384
 8000c84:	0800138e 	.word	0x0800138e
 8000c88:	00000000 	.word	0x00000000
 8000c8c:	08000a3f 	.word	0x08000a3f
 8000c90:	0800138a 	.word	0x0800138a

08000c94 <_printf_common>:
 8000c94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c98:	4616      	mov	r6, r2
 8000c9a:	4698      	mov	r8, r3
 8000c9c:	688a      	ldr	r2, [r1, #8]
 8000c9e:	690b      	ldr	r3, [r1, #16]
 8000ca0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ca4:	4293      	cmp	r3, r2
 8000ca6:	bfb8      	it	lt
 8000ca8:	4613      	movlt	r3, r2
 8000caa:	6033      	str	r3, [r6, #0]
 8000cac:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000cb0:	4607      	mov	r7, r0
 8000cb2:	460c      	mov	r4, r1
 8000cb4:	b10a      	cbz	r2, 8000cba <_printf_common+0x26>
 8000cb6:	3301      	adds	r3, #1
 8000cb8:	6033      	str	r3, [r6, #0]
 8000cba:	6823      	ldr	r3, [r4, #0]
 8000cbc:	0699      	lsls	r1, r3, #26
 8000cbe:	bf42      	ittt	mi
 8000cc0:	6833      	ldrmi	r3, [r6, #0]
 8000cc2:	3302      	addmi	r3, #2
 8000cc4:	6033      	strmi	r3, [r6, #0]
 8000cc6:	6825      	ldr	r5, [r4, #0]
 8000cc8:	f015 0506 	ands.w	r5, r5, #6
 8000ccc:	d106      	bne.n	8000cdc <_printf_common+0x48>
 8000cce:	f104 0a19 	add.w	sl, r4, #25
 8000cd2:	68e3      	ldr	r3, [r4, #12]
 8000cd4:	6832      	ldr	r2, [r6, #0]
 8000cd6:	1a9b      	subs	r3, r3, r2
 8000cd8:	42ab      	cmp	r3, r5
 8000cda:	dc26      	bgt.n	8000d2a <_printf_common+0x96>
 8000cdc:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000ce0:	6822      	ldr	r2, [r4, #0]
 8000ce2:	3b00      	subs	r3, #0
 8000ce4:	bf18      	it	ne
 8000ce6:	2301      	movne	r3, #1
 8000ce8:	0692      	lsls	r2, r2, #26
 8000cea:	d42b      	bmi.n	8000d44 <_printf_common+0xb0>
 8000cec:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000cf0:	4641      	mov	r1, r8
 8000cf2:	4638      	mov	r0, r7
 8000cf4:	47c8      	blx	r9
 8000cf6:	3001      	adds	r0, #1
 8000cf8:	d01e      	beq.n	8000d38 <_printf_common+0xa4>
 8000cfa:	6823      	ldr	r3, [r4, #0]
 8000cfc:	6922      	ldr	r2, [r4, #16]
 8000cfe:	f003 0306 	and.w	r3, r3, #6
 8000d02:	2b04      	cmp	r3, #4
 8000d04:	bf02      	ittt	eq
 8000d06:	68e5      	ldreq	r5, [r4, #12]
 8000d08:	6833      	ldreq	r3, [r6, #0]
 8000d0a:	1aed      	subeq	r5, r5, r3
 8000d0c:	68a3      	ldr	r3, [r4, #8]
 8000d0e:	bf0c      	ite	eq
 8000d10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d14:	2500      	movne	r5, #0
 8000d16:	4293      	cmp	r3, r2
 8000d18:	bfc4      	itt	gt
 8000d1a:	1a9b      	subgt	r3, r3, r2
 8000d1c:	18ed      	addgt	r5, r5, r3
 8000d1e:	2600      	movs	r6, #0
 8000d20:	341a      	adds	r4, #26
 8000d22:	42b5      	cmp	r5, r6
 8000d24:	d11a      	bne.n	8000d5c <_printf_common+0xc8>
 8000d26:	2000      	movs	r0, #0
 8000d28:	e008      	b.n	8000d3c <_printf_common+0xa8>
 8000d2a:	2301      	movs	r3, #1
 8000d2c:	4652      	mov	r2, sl
 8000d2e:	4641      	mov	r1, r8
 8000d30:	4638      	mov	r0, r7
 8000d32:	47c8      	blx	r9
 8000d34:	3001      	adds	r0, #1
 8000d36:	d103      	bne.n	8000d40 <_printf_common+0xac>
 8000d38:	f04f 30ff 	mov.w	r0, #4294967295
 8000d3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d40:	3501      	adds	r5, #1
 8000d42:	e7c6      	b.n	8000cd2 <_printf_common+0x3e>
 8000d44:	18e1      	adds	r1, r4, r3
 8000d46:	1c5a      	adds	r2, r3, #1
 8000d48:	2030      	movs	r0, #48	@ 0x30
 8000d4a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000d4e:	4422      	add	r2, r4
 8000d50:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000d54:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d58:	3302      	adds	r3, #2
 8000d5a:	e7c7      	b.n	8000cec <_printf_common+0x58>
 8000d5c:	2301      	movs	r3, #1
 8000d5e:	4622      	mov	r2, r4
 8000d60:	4641      	mov	r1, r8
 8000d62:	4638      	mov	r0, r7
 8000d64:	47c8      	blx	r9
 8000d66:	3001      	adds	r0, #1
 8000d68:	d0e6      	beq.n	8000d38 <_printf_common+0xa4>
 8000d6a:	3601      	adds	r6, #1
 8000d6c:	e7d9      	b.n	8000d22 <_printf_common+0x8e>
	...

08000d70 <_printf_i>:
 8000d70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d74:	7e0f      	ldrb	r7, [r1, #24]
 8000d76:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000d78:	2f78      	cmp	r7, #120	@ 0x78
 8000d7a:	4691      	mov	r9, r2
 8000d7c:	4680      	mov	r8, r0
 8000d7e:	460c      	mov	r4, r1
 8000d80:	469a      	mov	sl, r3
 8000d82:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000d86:	d807      	bhi.n	8000d98 <_printf_i+0x28>
 8000d88:	2f62      	cmp	r7, #98	@ 0x62
 8000d8a:	d80a      	bhi.n	8000da2 <_printf_i+0x32>
 8000d8c:	2f00      	cmp	r7, #0
 8000d8e:	f000 80d2 	beq.w	8000f36 <_printf_i+0x1c6>
 8000d92:	2f58      	cmp	r7, #88	@ 0x58
 8000d94:	f000 80b9 	beq.w	8000f0a <_printf_i+0x19a>
 8000d98:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000d9c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000da0:	e03a      	b.n	8000e18 <_printf_i+0xa8>
 8000da2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000da6:	2b15      	cmp	r3, #21
 8000da8:	d8f6      	bhi.n	8000d98 <_printf_i+0x28>
 8000daa:	a101      	add	r1, pc, #4	@ (adr r1, 8000db0 <_printf_i+0x40>)
 8000dac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000db0:	08000e09 	.word	0x08000e09
 8000db4:	08000e1d 	.word	0x08000e1d
 8000db8:	08000d99 	.word	0x08000d99
 8000dbc:	08000d99 	.word	0x08000d99
 8000dc0:	08000d99 	.word	0x08000d99
 8000dc4:	08000d99 	.word	0x08000d99
 8000dc8:	08000e1d 	.word	0x08000e1d
 8000dcc:	08000d99 	.word	0x08000d99
 8000dd0:	08000d99 	.word	0x08000d99
 8000dd4:	08000d99 	.word	0x08000d99
 8000dd8:	08000d99 	.word	0x08000d99
 8000ddc:	08000f1d 	.word	0x08000f1d
 8000de0:	08000e47 	.word	0x08000e47
 8000de4:	08000ed7 	.word	0x08000ed7
 8000de8:	08000d99 	.word	0x08000d99
 8000dec:	08000d99 	.word	0x08000d99
 8000df0:	08000f3f 	.word	0x08000f3f
 8000df4:	08000d99 	.word	0x08000d99
 8000df8:	08000e47 	.word	0x08000e47
 8000dfc:	08000d99 	.word	0x08000d99
 8000e00:	08000d99 	.word	0x08000d99
 8000e04:	08000edf 	.word	0x08000edf
 8000e08:	6833      	ldr	r3, [r6, #0]
 8000e0a:	1d1a      	adds	r2, r3, #4
 8000e0c:	681b      	ldr	r3, [r3, #0]
 8000e0e:	6032      	str	r2, [r6, #0]
 8000e10:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e14:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e18:	2301      	movs	r3, #1
 8000e1a:	e09d      	b.n	8000f58 <_printf_i+0x1e8>
 8000e1c:	6833      	ldr	r3, [r6, #0]
 8000e1e:	6820      	ldr	r0, [r4, #0]
 8000e20:	1d19      	adds	r1, r3, #4
 8000e22:	6031      	str	r1, [r6, #0]
 8000e24:	0606      	lsls	r6, r0, #24
 8000e26:	d501      	bpl.n	8000e2c <_printf_i+0xbc>
 8000e28:	681d      	ldr	r5, [r3, #0]
 8000e2a:	e003      	b.n	8000e34 <_printf_i+0xc4>
 8000e2c:	0645      	lsls	r5, r0, #25
 8000e2e:	d5fb      	bpl.n	8000e28 <_printf_i+0xb8>
 8000e30:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000e34:	2d00      	cmp	r5, #0
 8000e36:	da03      	bge.n	8000e40 <_printf_i+0xd0>
 8000e38:	232d      	movs	r3, #45	@ 0x2d
 8000e3a:	426d      	negs	r5, r5
 8000e3c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e40:	4859      	ldr	r0, [pc, #356]	@ (8000fa8 <_printf_i+0x238>)
 8000e42:	230a      	movs	r3, #10
 8000e44:	e011      	b.n	8000e6a <_printf_i+0xfa>
 8000e46:	6821      	ldr	r1, [r4, #0]
 8000e48:	6833      	ldr	r3, [r6, #0]
 8000e4a:	0608      	lsls	r0, r1, #24
 8000e4c:	f853 5b04 	ldr.w	r5, [r3], #4
 8000e50:	d402      	bmi.n	8000e58 <_printf_i+0xe8>
 8000e52:	0649      	lsls	r1, r1, #25
 8000e54:	bf48      	it	mi
 8000e56:	b2ad      	uxthmi	r5, r5
 8000e58:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e5a:	4853      	ldr	r0, [pc, #332]	@ (8000fa8 <_printf_i+0x238>)
 8000e5c:	6033      	str	r3, [r6, #0]
 8000e5e:	bf14      	ite	ne
 8000e60:	230a      	movne	r3, #10
 8000e62:	2308      	moveq	r3, #8
 8000e64:	2100      	movs	r1, #0
 8000e66:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000e6a:	6866      	ldr	r6, [r4, #4]
 8000e6c:	60a6      	str	r6, [r4, #8]
 8000e6e:	2e00      	cmp	r6, #0
 8000e70:	bfa2      	ittt	ge
 8000e72:	6821      	ldrge	r1, [r4, #0]
 8000e74:	f021 0104 	bicge.w	r1, r1, #4
 8000e78:	6021      	strge	r1, [r4, #0]
 8000e7a:	b90d      	cbnz	r5, 8000e80 <_printf_i+0x110>
 8000e7c:	2e00      	cmp	r6, #0
 8000e7e:	d04b      	beq.n	8000f18 <_printf_i+0x1a8>
 8000e80:	4616      	mov	r6, r2
 8000e82:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e86:	fb03 5711 	mls	r7, r3, r1, r5
 8000e8a:	5dc7      	ldrb	r7, [r0, r7]
 8000e8c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e90:	462f      	mov	r7, r5
 8000e92:	42bb      	cmp	r3, r7
 8000e94:	460d      	mov	r5, r1
 8000e96:	d9f4      	bls.n	8000e82 <_printf_i+0x112>
 8000e98:	2b08      	cmp	r3, #8
 8000e9a:	d10b      	bne.n	8000eb4 <_printf_i+0x144>
 8000e9c:	6823      	ldr	r3, [r4, #0]
 8000e9e:	07df      	lsls	r7, r3, #31
 8000ea0:	d508      	bpl.n	8000eb4 <_printf_i+0x144>
 8000ea2:	6923      	ldr	r3, [r4, #16]
 8000ea4:	6861      	ldr	r1, [r4, #4]
 8000ea6:	4299      	cmp	r1, r3
 8000ea8:	bfde      	ittt	le
 8000eaa:	2330      	movle	r3, #48	@ 0x30
 8000eac:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000eb0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000eb4:	1b92      	subs	r2, r2, r6
 8000eb6:	6122      	str	r2, [r4, #16]
 8000eb8:	f8cd a000 	str.w	sl, [sp]
 8000ebc:	464b      	mov	r3, r9
 8000ebe:	aa03      	add	r2, sp, #12
 8000ec0:	4621      	mov	r1, r4
 8000ec2:	4640      	mov	r0, r8
 8000ec4:	f7ff fee6 	bl	8000c94 <_printf_common>
 8000ec8:	3001      	adds	r0, #1
 8000eca:	d14a      	bne.n	8000f62 <_printf_i+0x1f2>
 8000ecc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ed0:	b004      	add	sp, #16
 8000ed2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ed6:	6823      	ldr	r3, [r4, #0]
 8000ed8:	f043 0320 	orr.w	r3, r3, #32
 8000edc:	6023      	str	r3, [r4, #0]
 8000ede:	4833      	ldr	r0, [pc, #204]	@ (8000fac <_printf_i+0x23c>)
 8000ee0:	2778      	movs	r7, #120	@ 0x78
 8000ee2:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000ee6:	6823      	ldr	r3, [r4, #0]
 8000ee8:	6831      	ldr	r1, [r6, #0]
 8000eea:	061f      	lsls	r7, r3, #24
 8000eec:	f851 5b04 	ldr.w	r5, [r1], #4
 8000ef0:	d402      	bmi.n	8000ef8 <_printf_i+0x188>
 8000ef2:	065f      	lsls	r7, r3, #25
 8000ef4:	bf48      	it	mi
 8000ef6:	b2ad      	uxthmi	r5, r5
 8000ef8:	6031      	str	r1, [r6, #0]
 8000efa:	07d9      	lsls	r1, r3, #31
 8000efc:	bf44      	itt	mi
 8000efe:	f043 0320 	orrmi.w	r3, r3, #32
 8000f02:	6023      	strmi	r3, [r4, #0]
 8000f04:	b11d      	cbz	r5, 8000f0e <_printf_i+0x19e>
 8000f06:	2310      	movs	r3, #16
 8000f08:	e7ac      	b.n	8000e64 <_printf_i+0xf4>
 8000f0a:	4827      	ldr	r0, [pc, #156]	@ (8000fa8 <_printf_i+0x238>)
 8000f0c:	e7e9      	b.n	8000ee2 <_printf_i+0x172>
 8000f0e:	6823      	ldr	r3, [r4, #0]
 8000f10:	f023 0320 	bic.w	r3, r3, #32
 8000f14:	6023      	str	r3, [r4, #0]
 8000f16:	e7f6      	b.n	8000f06 <_printf_i+0x196>
 8000f18:	4616      	mov	r6, r2
 8000f1a:	e7bd      	b.n	8000e98 <_printf_i+0x128>
 8000f1c:	6833      	ldr	r3, [r6, #0]
 8000f1e:	6825      	ldr	r5, [r4, #0]
 8000f20:	6961      	ldr	r1, [r4, #20]
 8000f22:	1d18      	adds	r0, r3, #4
 8000f24:	6030      	str	r0, [r6, #0]
 8000f26:	062e      	lsls	r6, r5, #24
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	d501      	bpl.n	8000f30 <_printf_i+0x1c0>
 8000f2c:	6019      	str	r1, [r3, #0]
 8000f2e:	e002      	b.n	8000f36 <_printf_i+0x1c6>
 8000f30:	0668      	lsls	r0, r5, #25
 8000f32:	d5fb      	bpl.n	8000f2c <_printf_i+0x1bc>
 8000f34:	8019      	strh	r1, [r3, #0]
 8000f36:	2300      	movs	r3, #0
 8000f38:	6123      	str	r3, [r4, #16]
 8000f3a:	4616      	mov	r6, r2
 8000f3c:	e7bc      	b.n	8000eb8 <_printf_i+0x148>
 8000f3e:	6833      	ldr	r3, [r6, #0]
 8000f40:	1d1a      	adds	r2, r3, #4
 8000f42:	6032      	str	r2, [r6, #0]
 8000f44:	681e      	ldr	r6, [r3, #0]
 8000f46:	6862      	ldr	r2, [r4, #4]
 8000f48:	2100      	movs	r1, #0
 8000f4a:	4630      	mov	r0, r6
 8000f4c:	f7ff f948 	bl	80001e0 <memchr>
 8000f50:	b108      	cbz	r0, 8000f56 <_printf_i+0x1e6>
 8000f52:	1b80      	subs	r0, r0, r6
 8000f54:	6060      	str	r0, [r4, #4]
 8000f56:	6863      	ldr	r3, [r4, #4]
 8000f58:	6123      	str	r3, [r4, #16]
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000f60:	e7aa      	b.n	8000eb8 <_printf_i+0x148>
 8000f62:	6923      	ldr	r3, [r4, #16]
 8000f64:	4632      	mov	r2, r6
 8000f66:	4649      	mov	r1, r9
 8000f68:	4640      	mov	r0, r8
 8000f6a:	47d0      	blx	sl
 8000f6c:	3001      	adds	r0, #1
 8000f6e:	d0ad      	beq.n	8000ecc <_printf_i+0x15c>
 8000f70:	6823      	ldr	r3, [r4, #0]
 8000f72:	079b      	lsls	r3, r3, #30
 8000f74:	d413      	bmi.n	8000f9e <_printf_i+0x22e>
 8000f76:	68e0      	ldr	r0, [r4, #12]
 8000f78:	9b03      	ldr	r3, [sp, #12]
 8000f7a:	4298      	cmp	r0, r3
 8000f7c:	bfb8      	it	lt
 8000f7e:	4618      	movlt	r0, r3
 8000f80:	e7a6      	b.n	8000ed0 <_printf_i+0x160>
 8000f82:	2301      	movs	r3, #1
 8000f84:	4632      	mov	r2, r6
 8000f86:	4649      	mov	r1, r9
 8000f88:	4640      	mov	r0, r8
 8000f8a:	47d0      	blx	sl
 8000f8c:	3001      	adds	r0, #1
 8000f8e:	d09d      	beq.n	8000ecc <_printf_i+0x15c>
 8000f90:	3501      	adds	r5, #1
 8000f92:	68e3      	ldr	r3, [r4, #12]
 8000f94:	9903      	ldr	r1, [sp, #12]
 8000f96:	1a5b      	subs	r3, r3, r1
 8000f98:	42ab      	cmp	r3, r5
 8000f9a:	dcf2      	bgt.n	8000f82 <_printf_i+0x212>
 8000f9c:	e7eb      	b.n	8000f76 <_printf_i+0x206>
 8000f9e:	2500      	movs	r5, #0
 8000fa0:	f104 0619 	add.w	r6, r4, #25
 8000fa4:	e7f5      	b.n	8000f92 <_printf_i+0x222>
 8000fa6:	bf00      	nop
 8000fa8:	08001395 	.word	0x08001395
 8000fac:	080013a6 	.word	0x080013a6

08000fb0 <__sflush_r>:
 8000fb0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000fb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fb8:	0716      	lsls	r6, r2, #28
 8000fba:	4605      	mov	r5, r0
 8000fbc:	460c      	mov	r4, r1
 8000fbe:	d454      	bmi.n	800106a <__sflush_r+0xba>
 8000fc0:	684b      	ldr	r3, [r1, #4]
 8000fc2:	2b00      	cmp	r3, #0
 8000fc4:	dc02      	bgt.n	8000fcc <__sflush_r+0x1c>
 8000fc6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	dd48      	ble.n	800105e <__sflush_r+0xae>
 8000fcc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000fce:	2e00      	cmp	r6, #0
 8000fd0:	d045      	beq.n	800105e <__sflush_r+0xae>
 8000fd2:	2300      	movs	r3, #0
 8000fd4:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8000fd8:	682f      	ldr	r7, [r5, #0]
 8000fda:	6a21      	ldr	r1, [r4, #32]
 8000fdc:	602b      	str	r3, [r5, #0]
 8000fde:	d030      	beq.n	8001042 <__sflush_r+0x92>
 8000fe0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8000fe2:	89a3      	ldrh	r3, [r4, #12]
 8000fe4:	0759      	lsls	r1, r3, #29
 8000fe6:	d505      	bpl.n	8000ff4 <__sflush_r+0x44>
 8000fe8:	6863      	ldr	r3, [r4, #4]
 8000fea:	1ad2      	subs	r2, r2, r3
 8000fec:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8000fee:	b10b      	cbz	r3, 8000ff4 <__sflush_r+0x44>
 8000ff0:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8000ff2:	1ad2      	subs	r2, r2, r3
 8000ff4:	2300      	movs	r3, #0
 8000ff6:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8000ff8:	6a21      	ldr	r1, [r4, #32]
 8000ffa:	4628      	mov	r0, r5
 8000ffc:	47b0      	blx	r6
 8000ffe:	1c43      	adds	r3, r0, #1
 8001000:	89a3      	ldrh	r3, [r4, #12]
 8001002:	d106      	bne.n	8001012 <__sflush_r+0x62>
 8001004:	6829      	ldr	r1, [r5, #0]
 8001006:	291d      	cmp	r1, #29
 8001008:	d82b      	bhi.n	8001062 <__sflush_r+0xb2>
 800100a:	4a2a      	ldr	r2, [pc, #168]	@ (80010b4 <__sflush_r+0x104>)
 800100c:	410a      	asrs	r2, r1
 800100e:	07d6      	lsls	r6, r2, #31
 8001010:	d427      	bmi.n	8001062 <__sflush_r+0xb2>
 8001012:	2200      	movs	r2, #0
 8001014:	6062      	str	r2, [r4, #4]
 8001016:	04d9      	lsls	r1, r3, #19
 8001018:	6922      	ldr	r2, [r4, #16]
 800101a:	6022      	str	r2, [r4, #0]
 800101c:	d504      	bpl.n	8001028 <__sflush_r+0x78>
 800101e:	1c42      	adds	r2, r0, #1
 8001020:	d101      	bne.n	8001026 <__sflush_r+0x76>
 8001022:	682b      	ldr	r3, [r5, #0]
 8001024:	b903      	cbnz	r3, 8001028 <__sflush_r+0x78>
 8001026:	6560      	str	r0, [r4, #84]	@ 0x54
 8001028:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800102a:	602f      	str	r7, [r5, #0]
 800102c:	b1b9      	cbz	r1, 800105e <__sflush_r+0xae>
 800102e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001032:	4299      	cmp	r1, r3
 8001034:	d002      	beq.n	800103c <__sflush_r+0x8c>
 8001036:	4628      	mov	r0, r5
 8001038:	f7ff fbf2 	bl	8000820 <_free_r>
 800103c:	2300      	movs	r3, #0
 800103e:	6363      	str	r3, [r4, #52]	@ 0x34
 8001040:	e00d      	b.n	800105e <__sflush_r+0xae>
 8001042:	2301      	movs	r3, #1
 8001044:	4628      	mov	r0, r5
 8001046:	47b0      	blx	r6
 8001048:	4602      	mov	r2, r0
 800104a:	1c50      	adds	r0, r2, #1
 800104c:	d1c9      	bne.n	8000fe2 <__sflush_r+0x32>
 800104e:	682b      	ldr	r3, [r5, #0]
 8001050:	2b00      	cmp	r3, #0
 8001052:	d0c6      	beq.n	8000fe2 <__sflush_r+0x32>
 8001054:	2b1d      	cmp	r3, #29
 8001056:	d001      	beq.n	800105c <__sflush_r+0xac>
 8001058:	2b16      	cmp	r3, #22
 800105a:	d11e      	bne.n	800109a <__sflush_r+0xea>
 800105c:	602f      	str	r7, [r5, #0]
 800105e:	2000      	movs	r0, #0
 8001060:	e022      	b.n	80010a8 <__sflush_r+0xf8>
 8001062:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001066:	b21b      	sxth	r3, r3
 8001068:	e01b      	b.n	80010a2 <__sflush_r+0xf2>
 800106a:	690f      	ldr	r7, [r1, #16]
 800106c:	2f00      	cmp	r7, #0
 800106e:	d0f6      	beq.n	800105e <__sflush_r+0xae>
 8001070:	0793      	lsls	r3, r2, #30
 8001072:	680e      	ldr	r6, [r1, #0]
 8001074:	bf08      	it	eq
 8001076:	694b      	ldreq	r3, [r1, #20]
 8001078:	600f      	str	r7, [r1, #0]
 800107a:	bf18      	it	ne
 800107c:	2300      	movne	r3, #0
 800107e:	eba6 0807 	sub.w	r8, r6, r7
 8001082:	608b      	str	r3, [r1, #8]
 8001084:	f1b8 0f00 	cmp.w	r8, #0
 8001088:	dde9      	ble.n	800105e <__sflush_r+0xae>
 800108a:	6a21      	ldr	r1, [r4, #32]
 800108c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800108e:	4643      	mov	r3, r8
 8001090:	463a      	mov	r2, r7
 8001092:	4628      	mov	r0, r5
 8001094:	47b0      	blx	r6
 8001096:	2800      	cmp	r0, #0
 8001098:	dc08      	bgt.n	80010ac <__sflush_r+0xfc>
 800109a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800109e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010a2:	81a3      	strh	r3, [r4, #12]
 80010a4:	f04f 30ff 	mov.w	r0, #4294967295
 80010a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010ac:	4407      	add	r7, r0
 80010ae:	eba8 0800 	sub.w	r8, r8, r0
 80010b2:	e7e7      	b.n	8001084 <__sflush_r+0xd4>
 80010b4:	dfbffffe 	.word	0xdfbffffe

080010b8 <_fflush_r>:
 80010b8:	b538      	push	{r3, r4, r5, lr}
 80010ba:	690b      	ldr	r3, [r1, #16]
 80010bc:	4605      	mov	r5, r0
 80010be:	460c      	mov	r4, r1
 80010c0:	b913      	cbnz	r3, 80010c8 <_fflush_r+0x10>
 80010c2:	2500      	movs	r5, #0
 80010c4:	4628      	mov	r0, r5
 80010c6:	bd38      	pop	{r3, r4, r5, pc}
 80010c8:	b118      	cbz	r0, 80010d2 <_fflush_r+0x1a>
 80010ca:	6a03      	ldr	r3, [r0, #32]
 80010cc:	b90b      	cbnz	r3, 80010d2 <_fflush_r+0x1a>
 80010ce:	f7ff fa9f 	bl	8000610 <__sinit>
 80010d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d0f3      	beq.n	80010c2 <_fflush_r+0xa>
 80010da:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80010dc:	07d0      	lsls	r0, r2, #31
 80010de:	d404      	bmi.n	80010ea <_fflush_r+0x32>
 80010e0:	0599      	lsls	r1, r3, #22
 80010e2:	d402      	bmi.n	80010ea <_fflush_r+0x32>
 80010e4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80010e6:	f7ff fb98 	bl	800081a <__retarget_lock_acquire_recursive>
 80010ea:	4628      	mov	r0, r5
 80010ec:	4621      	mov	r1, r4
 80010ee:	f7ff ff5f 	bl	8000fb0 <__sflush_r>
 80010f2:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80010f4:	07da      	lsls	r2, r3, #31
 80010f6:	4605      	mov	r5, r0
 80010f8:	d4e4      	bmi.n	80010c4 <_fflush_r+0xc>
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	059b      	lsls	r3, r3, #22
 80010fe:	d4e1      	bmi.n	80010c4 <_fflush_r+0xc>
 8001100:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001102:	f7ff fb8b 	bl	800081c <__retarget_lock_release_recursive>
 8001106:	e7dd      	b.n	80010c4 <_fflush_r+0xc>

08001108 <__swbuf_r>:
 8001108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800110a:	460e      	mov	r6, r1
 800110c:	4614      	mov	r4, r2
 800110e:	4605      	mov	r5, r0
 8001110:	b118      	cbz	r0, 800111a <__swbuf_r+0x12>
 8001112:	6a03      	ldr	r3, [r0, #32]
 8001114:	b90b      	cbnz	r3, 800111a <__swbuf_r+0x12>
 8001116:	f7ff fa7b 	bl	8000610 <__sinit>
 800111a:	69a3      	ldr	r3, [r4, #24]
 800111c:	60a3      	str	r3, [r4, #8]
 800111e:	89a3      	ldrh	r3, [r4, #12]
 8001120:	071a      	lsls	r2, r3, #28
 8001122:	d501      	bpl.n	8001128 <__swbuf_r+0x20>
 8001124:	6923      	ldr	r3, [r4, #16]
 8001126:	b943      	cbnz	r3, 800113a <__swbuf_r+0x32>
 8001128:	4621      	mov	r1, r4
 800112a:	4628      	mov	r0, r5
 800112c:	f000 f82a 	bl	8001184 <__swsetup_r>
 8001130:	b118      	cbz	r0, 800113a <__swbuf_r+0x32>
 8001132:	f04f 37ff 	mov.w	r7, #4294967295
 8001136:	4638      	mov	r0, r7
 8001138:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	6922      	ldr	r2, [r4, #16]
 800113e:	1a98      	subs	r0, r3, r2
 8001140:	6963      	ldr	r3, [r4, #20]
 8001142:	b2f6      	uxtb	r6, r6
 8001144:	4283      	cmp	r3, r0
 8001146:	4637      	mov	r7, r6
 8001148:	dc05      	bgt.n	8001156 <__swbuf_r+0x4e>
 800114a:	4621      	mov	r1, r4
 800114c:	4628      	mov	r0, r5
 800114e:	f7ff ffb3 	bl	80010b8 <_fflush_r>
 8001152:	2800      	cmp	r0, #0
 8001154:	d1ed      	bne.n	8001132 <__swbuf_r+0x2a>
 8001156:	68a3      	ldr	r3, [r4, #8]
 8001158:	3b01      	subs	r3, #1
 800115a:	60a3      	str	r3, [r4, #8]
 800115c:	6823      	ldr	r3, [r4, #0]
 800115e:	1c5a      	adds	r2, r3, #1
 8001160:	6022      	str	r2, [r4, #0]
 8001162:	701e      	strb	r6, [r3, #0]
 8001164:	6962      	ldr	r2, [r4, #20]
 8001166:	1c43      	adds	r3, r0, #1
 8001168:	429a      	cmp	r2, r3
 800116a:	d004      	beq.n	8001176 <__swbuf_r+0x6e>
 800116c:	89a3      	ldrh	r3, [r4, #12]
 800116e:	07db      	lsls	r3, r3, #31
 8001170:	d5e1      	bpl.n	8001136 <__swbuf_r+0x2e>
 8001172:	2e0a      	cmp	r6, #10
 8001174:	d1df      	bne.n	8001136 <__swbuf_r+0x2e>
 8001176:	4621      	mov	r1, r4
 8001178:	4628      	mov	r0, r5
 800117a:	f7ff ff9d 	bl	80010b8 <_fflush_r>
 800117e:	2800      	cmp	r0, #0
 8001180:	d0d9      	beq.n	8001136 <__swbuf_r+0x2e>
 8001182:	e7d6      	b.n	8001132 <__swbuf_r+0x2a>

08001184 <__swsetup_r>:
 8001184:	b538      	push	{r3, r4, r5, lr}
 8001186:	4b29      	ldr	r3, [pc, #164]	@ (800122c <__swsetup_r+0xa8>)
 8001188:	4605      	mov	r5, r0
 800118a:	6818      	ldr	r0, [r3, #0]
 800118c:	460c      	mov	r4, r1
 800118e:	b118      	cbz	r0, 8001198 <__swsetup_r+0x14>
 8001190:	6a03      	ldr	r3, [r0, #32]
 8001192:	b90b      	cbnz	r3, 8001198 <__swsetup_r+0x14>
 8001194:	f7ff fa3c 	bl	8000610 <__sinit>
 8001198:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800119c:	0719      	lsls	r1, r3, #28
 800119e:	d422      	bmi.n	80011e6 <__swsetup_r+0x62>
 80011a0:	06da      	lsls	r2, r3, #27
 80011a2:	d407      	bmi.n	80011b4 <__swsetup_r+0x30>
 80011a4:	2209      	movs	r2, #9
 80011a6:	602a      	str	r2, [r5, #0]
 80011a8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011ac:	81a3      	strh	r3, [r4, #12]
 80011ae:	f04f 30ff 	mov.w	r0, #4294967295
 80011b2:	e033      	b.n	800121c <__swsetup_r+0x98>
 80011b4:	0758      	lsls	r0, r3, #29
 80011b6:	d512      	bpl.n	80011de <__swsetup_r+0x5a>
 80011b8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011ba:	b141      	cbz	r1, 80011ce <__swsetup_r+0x4a>
 80011bc:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80011c0:	4299      	cmp	r1, r3
 80011c2:	d002      	beq.n	80011ca <__swsetup_r+0x46>
 80011c4:	4628      	mov	r0, r5
 80011c6:	f7ff fb2b 	bl	8000820 <_free_r>
 80011ca:	2300      	movs	r3, #0
 80011cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80011ce:	89a3      	ldrh	r3, [r4, #12]
 80011d0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80011d4:	81a3      	strh	r3, [r4, #12]
 80011d6:	2300      	movs	r3, #0
 80011d8:	6063      	str	r3, [r4, #4]
 80011da:	6923      	ldr	r3, [r4, #16]
 80011dc:	6023      	str	r3, [r4, #0]
 80011de:	89a3      	ldrh	r3, [r4, #12]
 80011e0:	f043 0308 	orr.w	r3, r3, #8
 80011e4:	81a3      	strh	r3, [r4, #12]
 80011e6:	6923      	ldr	r3, [r4, #16]
 80011e8:	b94b      	cbnz	r3, 80011fe <__swsetup_r+0x7a>
 80011ea:	89a3      	ldrh	r3, [r4, #12]
 80011ec:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80011f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80011f4:	d003      	beq.n	80011fe <__swsetup_r+0x7a>
 80011f6:	4621      	mov	r1, r4
 80011f8:	4628      	mov	r0, r5
 80011fa:	f000 f84f 	bl	800129c <__smakebuf_r>
 80011fe:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001202:	f013 0201 	ands.w	r2, r3, #1
 8001206:	d00a      	beq.n	800121e <__swsetup_r+0x9a>
 8001208:	2200      	movs	r2, #0
 800120a:	60a2      	str	r2, [r4, #8]
 800120c:	6962      	ldr	r2, [r4, #20]
 800120e:	4252      	negs	r2, r2
 8001210:	61a2      	str	r2, [r4, #24]
 8001212:	6922      	ldr	r2, [r4, #16]
 8001214:	b942      	cbnz	r2, 8001228 <__swsetup_r+0xa4>
 8001216:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800121a:	d1c5      	bne.n	80011a8 <__swsetup_r+0x24>
 800121c:	bd38      	pop	{r3, r4, r5, pc}
 800121e:	0799      	lsls	r1, r3, #30
 8001220:	bf58      	it	pl
 8001222:	6962      	ldrpl	r2, [r4, #20]
 8001224:	60a2      	str	r2, [r4, #8]
 8001226:	e7f4      	b.n	8001212 <__swsetup_r+0x8e>
 8001228:	2000      	movs	r0, #0
 800122a:	e7f7      	b.n	800121c <__swsetup_r+0x98>
 800122c:	2000000c 	.word	0x2000000c

08001230 <_sbrk_r>:
 8001230:	b538      	push	{r3, r4, r5, lr}
 8001232:	4d06      	ldr	r5, [pc, #24]	@ (800124c <_sbrk_r+0x1c>)
 8001234:	2300      	movs	r3, #0
 8001236:	4604      	mov	r4, r0
 8001238:	4608      	mov	r0, r1
 800123a:	602b      	str	r3, [r5, #0]
 800123c:	f7ff f8fc 	bl	8000438 <_sbrk>
 8001240:	1c43      	adds	r3, r0, #1
 8001242:	d102      	bne.n	800124a <_sbrk_r+0x1a>
 8001244:	682b      	ldr	r3, [r5, #0]
 8001246:	b103      	cbz	r3, 800124a <_sbrk_r+0x1a>
 8001248:	6023      	str	r3, [r4, #0]
 800124a:	bd38      	pop	{r3, r4, r5, pc}
 800124c:	200001bc 	.word	0x200001bc

08001250 <__swhatbuf_r>:
 8001250:	b570      	push	{r4, r5, r6, lr}
 8001252:	460c      	mov	r4, r1
 8001254:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001258:	2900      	cmp	r1, #0
 800125a:	b096      	sub	sp, #88	@ 0x58
 800125c:	4615      	mov	r5, r2
 800125e:	461e      	mov	r6, r3
 8001260:	da0d      	bge.n	800127e <__swhatbuf_r+0x2e>
 8001262:	89a3      	ldrh	r3, [r4, #12]
 8001264:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8001268:	f04f 0100 	mov.w	r1, #0
 800126c:	bf14      	ite	ne
 800126e:	2340      	movne	r3, #64	@ 0x40
 8001270:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001274:	2000      	movs	r0, #0
 8001276:	6031      	str	r1, [r6, #0]
 8001278:	602b      	str	r3, [r5, #0]
 800127a:	b016      	add	sp, #88	@ 0x58
 800127c:	bd70      	pop	{r4, r5, r6, pc}
 800127e:	466a      	mov	r2, sp
 8001280:	f000 f848 	bl	8001314 <_fstat_r>
 8001284:	2800      	cmp	r0, #0
 8001286:	dbec      	blt.n	8001262 <__swhatbuf_r+0x12>
 8001288:	9901      	ldr	r1, [sp, #4]
 800128a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800128e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8001292:	4259      	negs	r1, r3
 8001294:	4159      	adcs	r1, r3
 8001296:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800129a:	e7eb      	b.n	8001274 <__swhatbuf_r+0x24>

0800129c <__smakebuf_r>:
 800129c:	898b      	ldrh	r3, [r1, #12]
 800129e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012a0:	079d      	lsls	r5, r3, #30
 80012a2:	4606      	mov	r6, r0
 80012a4:	460c      	mov	r4, r1
 80012a6:	d507      	bpl.n	80012b8 <__smakebuf_r+0x1c>
 80012a8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012ac:	6023      	str	r3, [r4, #0]
 80012ae:	6123      	str	r3, [r4, #16]
 80012b0:	2301      	movs	r3, #1
 80012b2:	6163      	str	r3, [r4, #20]
 80012b4:	b003      	add	sp, #12
 80012b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012b8:	ab01      	add	r3, sp, #4
 80012ba:	466a      	mov	r2, sp
 80012bc:	f7ff ffc8 	bl	8001250 <__swhatbuf_r>
 80012c0:	9f00      	ldr	r7, [sp, #0]
 80012c2:	4605      	mov	r5, r0
 80012c4:	4639      	mov	r1, r7
 80012c6:	4630      	mov	r0, r6
 80012c8:	f7ff fb16 	bl	80008f8 <_malloc_r>
 80012cc:	b948      	cbnz	r0, 80012e2 <__smakebuf_r+0x46>
 80012ce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012d2:	059a      	lsls	r2, r3, #22
 80012d4:	d4ee      	bmi.n	80012b4 <__smakebuf_r+0x18>
 80012d6:	f023 0303 	bic.w	r3, r3, #3
 80012da:	f043 0302 	orr.w	r3, r3, #2
 80012de:	81a3      	strh	r3, [r4, #12]
 80012e0:	e7e2      	b.n	80012a8 <__smakebuf_r+0xc>
 80012e2:	89a3      	ldrh	r3, [r4, #12]
 80012e4:	6020      	str	r0, [r4, #0]
 80012e6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80012ea:	81a3      	strh	r3, [r4, #12]
 80012ec:	9b01      	ldr	r3, [sp, #4]
 80012ee:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80012f2:	b15b      	cbz	r3, 800130c <__smakebuf_r+0x70>
 80012f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012f8:	4630      	mov	r0, r6
 80012fa:	f000 f81d 	bl	8001338 <_isatty_r>
 80012fe:	b128      	cbz	r0, 800130c <__smakebuf_r+0x70>
 8001300:	89a3      	ldrh	r3, [r4, #12]
 8001302:	f023 0303 	bic.w	r3, r3, #3
 8001306:	f043 0301 	orr.w	r3, r3, #1
 800130a:	81a3      	strh	r3, [r4, #12]
 800130c:	89a3      	ldrh	r3, [r4, #12]
 800130e:	431d      	orrs	r5, r3
 8001310:	81a5      	strh	r5, [r4, #12]
 8001312:	e7cf      	b.n	80012b4 <__smakebuf_r+0x18>

08001314 <_fstat_r>:
 8001314:	b538      	push	{r3, r4, r5, lr}
 8001316:	4d07      	ldr	r5, [pc, #28]	@ (8001334 <_fstat_r+0x20>)
 8001318:	2300      	movs	r3, #0
 800131a:	4604      	mov	r4, r0
 800131c:	4608      	mov	r0, r1
 800131e:	4611      	mov	r1, r2
 8001320:	602b      	str	r3, [r5, #0]
 8001322:	f7ff f860 	bl	80003e6 <_fstat>
 8001326:	1c43      	adds	r3, r0, #1
 8001328:	d102      	bne.n	8001330 <_fstat_r+0x1c>
 800132a:	682b      	ldr	r3, [r5, #0]
 800132c:	b103      	cbz	r3, 8001330 <_fstat_r+0x1c>
 800132e:	6023      	str	r3, [r4, #0]
 8001330:	bd38      	pop	{r3, r4, r5, pc}
 8001332:	bf00      	nop
 8001334:	200001bc 	.word	0x200001bc

08001338 <_isatty_r>:
 8001338:	b538      	push	{r3, r4, r5, lr}
 800133a:	4d06      	ldr	r5, [pc, #24]	@ (8001354 <_isatty_r+0x1c>)
 800133c:	2300      	movs	r3, #0
 800133e:	4604      	mov	r4, r0
 8001340:	4608      	mov	r0, r1
 8001342:	602b      	str	r3, [r5, #0]
 8001344:	f7ff f85f 	bl	8000406 <_isatty>
 8001348:	1c43      	adds	r3, r0, #1
 800134a:	d102      	bne.n	8001352 <_isatty_r+0x1a>
 800134c:	682b      	ldr	r3, [r5, #0]
 800134e:	b103      	cbz	r3, 8001352 <_isatty_r+0x1a>
 8001350:	6023      	str	r3, [r4, #0]
 8001352:	bd38      	pop	{r3, r4, r5, pc}
 8001354:	200001bc 	.word	0x200001bc

08001358 <_init>:
 8001358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800135a:	bf00      	nop
 800135c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800135e:	bc08      	pop	{r3}
 8001360:	469e      	mov	lr, r3
 8001362:	4770      	bx	lr

08001364 <_fini>:
 8001364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001366:	bf00      	nop
 8001368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800136a:	bc08      	pop	{r3}
 800136c:	469e      	mov	lr, r3
 800136e:	4770      	bx	lr
